// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
let activities = [];
let editingIndex = null;
let editingActivityId = null;
let summaryContext = {}; // ‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• context ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
let currentAccount = 'user';
let backupPassword = null;

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Local Storage ===
function getFromLocalStorage(key) {
    try {
        const item = localStorage.getItem(`${currentAccount}_${key}`);
        return item ? JSON.parse(item) : null;
    } catch (error) {
        console.error('Error reading from localStorage:', error);
        return null;
    }
}

function saveToLocalStorage(key, data) {
    try {
        localStorage.setItem(`${currentAccount}_${key}`, JSON.stringify(data));
        return true;
    } catch (error) {
        console.error('Error saving to localStorage:', error);
        showToast('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', 'error');
        return false;
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ===
function renderBackupPasswordStatus() {
    const passwordStatus = document.getElementById('password-status');
    if (!passwordStatus) return;
    
    if (backupPassword) {
        passwordStatus.textContent = '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß (‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™)';
        passwordStatus.style.color = '#28a745'; // ‡∏™‡∏µ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß
    } else {
        passwordStatus.textContent = '‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏à‡∏∞‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™)';
        passwordStatus.style.color = '#f5a623'; // ‡∏™‡∏µ‡∏™‡πâ‡∏°
    }
    
    console.log(`üîê ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô: ${backupPassword ? '‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡πâ‡∏ß' : '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏±‡πâ‡∏á'}`);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô ===
function showToast(message, type = 'success') {
    const toast = document.getElementById('toast');
    if (!toast) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö element toast');
        return;
    }
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏™‡∏î‡∏á
    toast.style.display = 'none';
    toast.style.opacity = '0';
    toast.classList.remove('show');
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
    toast.textContent = message;
    toast.className = `toast-notification ${type}`;
    
    // ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    setTimeout(() => {
        toast.style.display = 'block';
        setTimeout(() => {
            toast.classList.add('show');
            toast.style.opacity = '1'; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
        }, 10);
    }, 10);
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
    setTimeout(() => {
        toast.classList.remove('show');
        toast.style.opacity = '0'; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ
        setTimeout(() => {
            toast.style.display = 'none';
        }, 300);
    }, 3000);
    
    console.log(`üîî ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ${message}`);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function notifyActivitySaved(isUpdate = false) {
    const message = isUpdate ? '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß' : '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß';
    showToast(message, 'success');
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function notifyActivityDeleted() {
    showToast('‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô ===
function notifyDataUpdated(dataType, action) {
    const messages = {
        'person': {
            'add': '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
            'edit': '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
            'delete': '‡∏•‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
            'reset': '‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß'
        },
        'activityType': {
            'add': '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
            'edit': '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
            'delete': '‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
            'reset': '‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß'
        }
    };
    
    if (messages[dataType] && messages[dataType][action]) {
        showToast(messages[dataType][action], 'success');
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ===
function notifyDataManagement(action) {
    const messages = {
        'backup': '‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
        'restore': '‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
        'clean': '‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
        'save': '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
        'export': '‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß',
        'deleteByDate': '‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß'
    };
    
    if (messages[action]) {
        showToast(messages[action], 'success');
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ===
function initializeDefaultData() {
    console.log('üìÇ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô...');
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    backupPassword = getFromLocalStorage('backupPassword') || null;
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
    renderBackupPasswordStatus();
    
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    if (!getFromLocalStorage('activityTypes') || getFromLocalStorage('activityTypes').length === 0) {
        const defaultActivityTypes = [
            { name: '‡∏ó‡∏≥‡∏á‡∏≤‡∏ô' },
            { name: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô' },
            { name: '‡∏õ‡∏£‡∏∞‡∏ä‡∏∏‡∏°' }
        ];
        saveToLocalStorage('activityTypes', defaultActivityTypes);
        console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô');
    }
    
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    if (!getFromLocalStorage('persons') || getFromLocalStorage('persons').length === 0) {
        const defaultPersons = [
            { name: '‡∏û‡πà‡∏≠' },
            { name: '‡πÅ‡∏°‡πà' },
            { name: '‡∏•‡∏π‡∏Å‡∏ä‡∏≤‡∏¢' },
            { name: '‡∏•‡∏π‡∏Å‡∏™‡∏≤‡∏ß' }
        ];
        saveToLocalStorage('persons', defaultPersons);
        console.log('‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô');
    }
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô dropdowns
    populateActivityTypeDropdowns('activityTypeSelect');
    populatePersonDropdown('personSelect');
    populatePersonFilter();
    
    // ‚úÖ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    setDefaultDateTime();
    
    // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    setTimeout(() => {
        console.log('üîÑ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥...');
        autoSelectIfSingle();
        console.log('‚úÖ ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
    }, 300);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô ===
function setDefaultDateTime() {
    // ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏ó‡∏®‡πÑ‡∏ó‡∏¢
    const thaiTime = getThaiTime();
    const today = getThaiDateString();
    
    document.getElementById('activity-date').value = today;
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏õ‡πá‡∏ô 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡πÑ‡∏ó‡∏¢
    const oneHourAgo = new Date(thaiTime.getTime() - 60 * 60 * 1000);
    
    const startTime = formatThaiTime(oneHourAgo);
    document.getElementById('start-time').value = startTime;
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Ç‡∏≠‡∏á‡πÑ‡∏ó‡∏¢
    const endTime = formatThaiTime(thaiTime);
    document.getElementById('end-time').value = endTime;
    
    console.log(`‚è∞ ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡πÑ‡∏ó‡∏¢): ${startTime} (1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß), ‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î: ${endTime} (‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô), ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: ${today}`);
    console.log(`üåè ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô: ${thaiTime.toLocaleString('th-TH')}`);
    
    // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    document.getElementById('save-activity-button').classList.remove('hidden');
    document.getElementById('update-activity-button').classList.add('hidden');
    document.getElementById('cancel-edit-activity-button').classList.add('hidden');
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ ===
function calculateDuration(start, end) {
    const startDate = new Date(`2000-01-01T${start}`);
    const endDate = new Date(`2000-01-01T${end}`);

    if (isNaN(startDate) || isNaN(endDate)) {
        return 0;
    }

    if (endDate < startDate) {
        endDate.setDate(endDate.getDate() + 1);
    }

    const diffMilliseconds = endDate - startDate;
    return diffMilliseconds / (1000 * 60);
}

function formatDuration(minutes) {
    if (isNaN(minutes) || minutes < 0) return "‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á";
    const totalSeconds = Math.round(minutes * 60);
    const hours = Math.floor(totalSeconds / 3600);
    const remainingMinutes = Math.floor((totalSeconds % 3600) / 60);
    const seconds = totalSeconds % 60;

    let parts = [];
    if (hours > 0) parts.push(`${hours} ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á`);
    if (remainingMinutes > 0) parts.push(`${remainingMinutes} ‡∏ô‡∏≤‡∏ó‡∏µ`);
    if (seconds > 0 && hours === 0 && remainingMinutes === 0) parts.push(`${seconds} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ`);
    
    if (parts.length === 0) return "0 ‡∏ô‡∏≤‡∏ó‡∏µ";
    return parts.join(' ');
}
// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢ ===
function getThaiTime() {
    const now = new Date();
    const thaiOffset = 7 * 60; // UTC+7 ‡πÉ‡∏ô‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏ô‡∏≤‡∏ó‡∏µ
    return new Date(now.getTime() + (thaiOffset + now.getTimezoneOffset()) * 60000);
}

function getThaiDateString() {
    const thaiTime = getThaiTime();
    return thaiTime.toISOString().split('T')[0];
}

function formatThaiTime(date) {
    const hours = date.getHours().toString().padStart(2, '0');
    const minutes = date.getMinutes().toString().padStart(2, '0');
    return `${hours}:${minutes}`;
}
// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function handleActivityFormSubmit(event) {
    event.preventDefault();
    
    let activityName;
    const activityDropdown = document.getElementById('activityTypeSelect');
    activityName = activityDropdown.value;
    
    if (!activityName) {
        document.getElementById('activity-message').textContent = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°';
        document.getElementById('activity-message').style.color = 'red';
        return;
    }

    let person;
    const personDropdown = document.getElementById('personSelect');
    person = personDropdown.value;
    
    if (!person) {
        document.getElementById('activity-message').textContent = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°';
        document.getElementById('activity-message').style.color = 'red';
        return;
    }

    const date = document.getElementById('activity-date').value;
    const startTime = document.getElementById('start-time').value;
    const endTime = document.getElementById('end-time').value;
    const details = document.getElementById('activity-details').value.trim();

    if (!date || !startTime || !endTime) {
        document.getElementById('activity-message').textContent = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô';
        document.getElementById('activity-message').style.color = 'red';
        return;
    }

    const duration = calculateDuration(startTime, endTime);
    if (duration <= 0) {
        document.getElementById('activity-message').textContent = '‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î';
        document.getElementById('activity-message').style.color = 'red';
        return;
    }

    const allActivities = getFromLocalStorage('activities') || [];
    
    if (editingActivityId) {
        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà
        const activityIndex = allActivities.findIndex(a => a.id === editingActivityId);
        if (activityIndex === -1) return;

        allActivities[activityIndex] = {
            ...allActivities[activityIndex],
            activityName,
            person,
            date,
            startTime,
            endTime,
            details
        };
        
        document.getElementById('activity-message').textContent = '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß';
        document.getElementById('activity-message').style.color = 'green';
        editingActivityId = null;
        
        // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
        notifyActivitySaved(true); // true = ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
        
    } else {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà
        const newActivity = {
            id: Date.now().toString(),
            activityName,
            person,
            date,
            startTime,
            endTime,
            details,
            createdAt: new Date().toISOString()
        };

        allActivities.push(newActivity);
        document.getElementById('activity-message').textContent = '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß';
        document.getElementById('activity-message').style.color = 'green';
        
        // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà
        notifyActivitySaved(false); // false = ‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà
    }

    saveToLocalStorage('activities', allActivities);
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°
    resetActivityForm();
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà
    loadUserActivities();
    
    // ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    setTimeout(() => {
        autoSelectIfSingle();
    }, 100);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function resetActivityForm() {
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
    document.getElementById('activity-details').value = '';
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    document.getElementById('save-activity-button').classList.remove('hidden');
    document.getElementById('update-activity-button').classList.add('hidden');
    document.getElementById('cancel-edit-activity-button').classList.add('hidden');
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡∏°‡πà
    setDefaultDateTime();
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
    document.getElementById('activity-message').textContent = '';
    
    editingActivityId = null;
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ===
function cancelEditActivity() {
    resetActivityForm();
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ===
function autoSelectIfSingle() {
    console.log('üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥...');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    const allPersons = getFromLocalStorage('persons') || [];
    const personDropdown = document.getElementById('personSelect');
    
    const realPersonOptions = Array.from(personDropdown.options).filter(opt => 
        opt.value !== '' && opt.value !== 'custom'
    );
    
    if (realPersonOptions.length === 1) {
        const selectedValue = realPersonOptions[0].value;
        personDropdown.value = selectedValue;
        console.log(`‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: ${selectedValue}`);
        updateCurrentPersonDisplay();
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    const allActivityTypes = getFromLocalStorage('activityTypes') || [];
    const activityTypeDropdown = document.getElementById('activityTypeSelect');
    
    const realActivityTypeOptions = Array.from(activityTypeDropdown.options).filter(opt => 
        opt.value !== '' && opt.value !== 'custom'
    );
    
    if (realActivityTypeOptions.length === 1) {
        const selectedValue = realActivityTypeOptions[0].value;
        activityTypeDropdown.value = selectedValue;
        console.log(`‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥: ${selectedValue}`);
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Dropdown ===
function showSelectedValueDisplay(type, value) {
    const dropdown = document.getElementById(`${type}Select`);
    const wrapper = dropdown.closest('.select-wrapper');
    
    if (!wrapper) {
        console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö wrapper ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${type}`);
        return;
    }
    
    // ‡∏•‡∏ö element ‡πÄ‡∏î‡∏¥‡∏°‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
    const existingDisplay = wrapper.querySelector('.selected-value-display');
    if (existingDisplay) {
        existingDisplay.remove();
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á element ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    const displayElement = document.createElement('div');
    displayElement.className = 'selected-value-display';
    
    const typeLabel = type === 'person' ? '' : '';
    
    displayElement.innerHTML = `
        <div class="selected-value-container">
            <span class="selected-value-label">${typeLabel}</span>
            <span class="selected-value">${value}</span>
            <span class="selected-value-note"></span>
        </div>
    `;
    
    // ‡πÅ‡∏ó‡∏£‡∏Å‡∏Å‡πà‡∏≠‡∏ô dropdown
    wrapper.insertBefore(displayElement, dropdown);
    
    // ‡∏ã‡πà‡∏≠‡∏ô dropdown ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ
    wrapper.classList.add('hide-dropdown');
    
    console.log(`‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${type}: ${value}`);
    
    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    if (type === 'person') {
        updateCurrentPersonDisplay();
    }
}

function showDropdown(type) {
    const dropdown = document.getElementById(`${type}Select`);
    const wrapper = dropdown.closest('.select-wrapper');
    
    if (!wrapper) return;
    
    // ‡∏•‡∏ö element ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    const displayElement = wrapper.querySelector('.selected-value-display');
    if (displayElement) {
        displayElement.remove();
    }
    
    // ‡πÅ‡∏™‡∏î‡∏á dropdown
    wrapper.classList.remove('hide-dropdown');
    
    console.log(`‚úÖ ‡πÅ‡∏™‡∏î‡∏á dropdown ‡∏õ‡∏Å‡∏ï‡∏¥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${type}`);
    
    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    if (type === 'person') {
        updateCurrentPersonDisplay();
    }
}

function resetAutoSelectionDisplay(type) {
    console.log(`üîÑ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ${type}`);
    showDropdown(type);
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÉ‡∏´‡∏°‡πà‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    setTimeout(() => {
        autoSelectIfSingle();
    }, 100);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Dropdown ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function populatePersonDropdown(dropdownId) {
    const dropdown = document.getElementById(dropdownId);
    if (!dropdown) return;

    const allPersons = getFromLocalStorage('persons') || [];
    
    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠ (‡πÄ‡∏£‡∏µ‡∏¢‡∏á A-Z)
    allPersons.sort((a, b) => a.name.localeCompare(b.name, 'th'));

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ
    const selectedValue = dropdown.value;
    
    // ‡∏•‡πâ‡∏≤‡∏á options ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô option ‡πÅ‡∏£‡∏Å
    while (dropdown.options.length > 1) {
        dropdown.remove(1);
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    allPersons.forEach(person => {
        const option = document.createElement('option');
        option.value = person.name;
        option.textContent = person.name;
        dropdown.appendChild(option);
    });
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏≠‡∏∑‡πà‡∏ô‡πÜ" ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1
    if (allPersons.length > 1) {
        const customOption = document.createElement('option');
        customOption.value = 'custom';
        customOption.textContent = '‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏≠‡∏á)';
        dropdown.appendChild(customOption);
    }
    
    // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à
    setTimeout(() => {
        autoSelectIfSingle();
    }, 0);
    
    // ‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
    updateCurrentPersonDisplay();
    
    // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà)
    if (selectedValue && Array.from(dropdown.options).some(opt => opt.value === selectedValue)) {
        dropdown.value = selectedValue;
        updateCurrentPersonDisplay();
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Dropdown ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function populateActivityTypeDropdowns(dropdownId) {
    const dropdown = document.getElementById(dropdownId);
    if (!dropdown) return;

    const allActivityTypes = getFromLocalStorage('activityTypes') || [];
    
    // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠ (‡πÄ‡∏£‡∏µ‡∏¢‡∏á A-Z)
    allActivityTypes.sort((a, b) => a.name.localeCompare(b.name, 'th'));

    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ
    const selectedValue = dropdown.value;
    
    // ‡∏•‡πâ‡∏≤‡∏á options ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô option ‡πÅ‡∏£‡∏Å
    while (dropdown.options.length > 1) {
        dropdown.remove(1);
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    allActivityTypes.forEach(type => {
        const option = document.createElement('option');
        option.value = type.name;
        option.textContent = type.name;
        dropdown.appendChild(option);
    });
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å "‡∏≠‡∏∑‡πà‡∏ô‡πÜ" ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 1
    if (allActivityTypes.length > 1) {
        const customOption = document.createElement('option');
        customOption.value = 'custom';
        customOption.textContent = '‡∏≠‡∏∑‡πà‡∏ô‡πÜ (‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏≠‡∏á)';
        dropdown.appendChild(customOption);
    }
    
    // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏£‡πá‡∏à
    setTimeout(() => {
        autoSelectIfSingle();
    }, 0);
    
    // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà)
    if (selectedValue && Array.from(dropdown.options).some(opt => opt.value === selectedValue)) {
        dropdown.value = selectedValue;
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function addPerson() {
    document.getElementById('personModalTitle').textContent = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°';
    document.getElementById('modalPersonName').value = '';
    document.getElementById('personEditValue').value = '';
    document.getElementById('personModal').style.display = 'flex';
}

function editPerson() {
    const dropdown = document.getElementById('personSelect');
    const selectedValue = dropdown.value;
    
    if (!selectedValue || selectedValue === 'custom') {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç');
        return;
    }
    
    document.getElementById('personModalTitle').textContent = '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°';
    document.getElementById('modalPersonName').value = selectedValue;
    document.getElementById('personEditValue').value = selectedValue;
    document.getElementById('personModal').style.display = 'flex';
}

function deletePerson() {
    const dropdown = document.getElementById('personSelect');
    const selectedValue = dropdown.value;
    
    if (!selectedValue || selectedValue === 'custom') {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö');
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const isUsed = checkPersonUsage(selectedValue);
    
    let confirmMessage = `‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö "${selectedValue}" ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`;
    if (isUsed) {
        confirmMessage += `\n\n‚ö†Ô∏è  ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà ${getActivityCountByPerson(selectedValue)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠ "${selectedValue}" ‡πÅ‡∏ï‡πà‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡∏∏‡∏õ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`;
    }
    
    if (!confirm(confirmMessage)) {
        return;
    }
    
    let allPersons = getFromLocalStorage('persons') || [];
    allPersons = allPersons.filter(person => person.name !== selectedValue);
    saveToLocalStorage('persons', allPersons);
    
    populatePersonDropdown('personSelect');
    
    // ‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ‡∏î‡πâ‡∏ß‡∏¢
    updatePersonFilterAfterChange();
    
    notifyDataUpdated('person', 'delete');
    
    // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    resetAutoSelectionDisplay('person');
}

function savePerson() {
    const personName = document.getElementById('modalPersonName').value.trim();
    const editValue = document.getElementById('personEditValue').value;
    
    if (!personName) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°');
        return;
    }
    
    let allPersons = getFromLocalStorage('persons') || [];
    
    if (editValue) {
        // ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        const oldName = editValue;
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (oldName !== personName) {
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
            const personIndex = allPersons.findIndex(p => p.name === oldName);
            if (personIndex !== -1) {
                allPersons[personIndex].name = personName;
            }
            
            // üî• ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏î‡∏¥‡∏°
            const activitiesUpdated = updateAllActivitiesForPerson(oldName, personName);
            
            if (activitiesUpdated) {
                notifyDataUpdated('person', 'edit');
            } else {
                notifyDataUpdated('person', 'edit');
            }
            
            // ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
            loadUserActivities();
        } else {
            // ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
            showToast('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', 'info');
        }
    } else {
        // ‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°
        if (allPersons.some(p => p.name === personName)) {
            alert('‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
            return;
        }
        
        allPersons.push({ name: personName });
        notifyDataUpdated('person', 'add');
    }
    
    saveToLocalStorage('persons', allPersons);
    populatePersonDropdown('personSelect');
    
    // ‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ‡∏î‡πâ‡∏ß‡∏¢
    updatePersonFilterAfterChange();
    
    // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    resetAutoSelectionDisplay('person');
    
    closePersonModal();
    
    // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    setTimeout(() => {
        autoSelectIfSingle();
    }, 100);
}

function resetPerson() {
    if (!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô? ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏•‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ß‡πâ')) {
        return;
    }
    
    const defaultPersons = [
        { name: '‡∏û‡πà‡∏≠' },
        { name: '‡πÅ‡∏°‡πà' },
        { name: '‡∏•‡∏π‡∏Å‡∏ä‡∏≤‡∏¢' },
        { name: '‡∏•‡∏π‡∏Å‡∏™‡∏≤‡∏ß' }
    ];
    
    saveToLocalStorage('persons', defaultPersons);
    populatePersonDropdown('personSelect');
    
    // ‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ‡∏î‡πâ‡∏ß‡∏¢
    updatePersonFilterAfterChange();
    
    notifyDataUpdated('person', 'reset');
    
    // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
    setTimeout(() => {
        autoSelectIfSingle();
    }, 100);
}

function closePersonModal() {
    document.getElementById('personModal').style.display = 'none';
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function addActivityType() {
    document.getElementById('activityTypeModalTitle').textContent = '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°';
    document.getElementById('modalActivityTypeName').value = '';
    document.getElementById('activityTypeEditValue').value = '';
    document.getElementById('activityTypeModal').style.display = 'flex';
}

function editActivityType() {
    const dropdown = document.getElementById('activityTypeSelect');
    const selectedValue = dropdown.value;
    
    if (!selectedValue || selectedValue === 'custom') {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç');
        return;
    }
    
    document.getElementById('activityTypeModalTitle').textContent = '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°';
    document.getElementById('modalActivityTypeName').value = selectedValue;
    document.getElementById('activityTypeEditValue').value = selectedValue;
    document.getElementById('activityTypeModal').style.display = 'flex';
}

function deleteActivityType() {
    const dropdown = document.getElementById('activityTypeSelect');
    const selectedValue = dropdown.value;
    
    if (!selectedValue || selectedValue === 'custom') {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö');
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const isUsed = checkActivityTypeUsage(selectedValue);
    
    let confirmMessage = `‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö "${selectedValue}" ‡πÉ‡∏ä‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`;
    if (isUsed) {
        confirmMessage += `\n\n‚ö†Ô∏è  ‡∏Ñ‡∏≥‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà ${getActivityCountByType(selectedValue)} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏´‡∏•‡πà‡∏≤‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó "${selectedValue}" ‡πÅ‡∏ï‡πà‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏£‡∏∏‡∏õ‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á`;
    }
    
    if (!confirm(confirmMessage)) {
        return;
    }
    
    let allActivityTypes = getFromLocalStorage('activityTypes') || [];
    allActivityTypes = allActivityTypes.filter(type => type.name !== selectedValue);
    saveToLocalStorage('activityTypes', allActivityTypes);
    
    populateActivityTypeDropdowns('activityTypeSelect');
    notifyDataUpdated('activityType', 'delete');
    
    // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    resetAutoSelectionDisplay('activityType');
}

function saveActivityType() {
    const activityTypeName = document.getElementById('modalActivityTypeName').value.trim();
    const editValue = document.getElementById('activityTypeEditValue').value;
    
    if (!activityTypeName) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°');
        return;
    }
    
    let allActivityTypes = getFromLocalStorage('activityTypes') || [];
    
    if (editValue) {
        // ‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        const oldName = editValue;
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if (oldName !== activityTypeName) {
            // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
            const typeIndex = allActivityTypes.findIndex(t => t.name === oldName);
            if (typeIndex !== -1) {
                allActivityTypes[typeIndex].name = activityTypeName;
            }
            
            // üî• ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏î‡∏¥‡∏°
            const activitiesUpdated = updateAllActivitiesForActivityType(oldName, activityTypeName);
            
            if (activitiesUpdated) {
                notifyDataUpdated('activityType', 'edit');
            } else {
                notifyDataUpdated('activityType', 'edit');
            }
            
            // ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï
            loadUserActivities();
        } else {
            // ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á
            showToast('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', 'info');
        }
    } else {
        // ‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°
        if (allActivityTypes.some(t => t.name === activityTypeName)) {
            alert('‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß');
            return;
        }
        
        allActivityTypes.push({ name: activityTypeName });
        notifyDataUpdated('activityType', 'add');
    }
    
    saveToLocalStorage('activityTypes', allActivityTypes);
    populateActivityTypeDropdowns('activityTypeSelect');
    
    // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    resetAutoSelectionDisplay('activityType');
    
    closeActivityTypeModal();
    
    // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    setTimeout(() => {
        autoSelectIfSingle();
    }, 100);
}

function resetActivityType() {
    if (!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô? ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÑ‡∏ß‡πâ')) {
        return;
    }
    
    const defaultActivityTypes = [
        { name: '‡∏ó‡∏≥‡∏á‡∏≤‡∏ô' },
        { name: '‡πÄ‡∏£‡∏µ‡∏¢‡∏ô' },
        { name: '‡∏ô‡∏±‡πà‡∏á‡∏™‡∏°‡∏≤‡∏ò‡∏¥' },
        { name: '‡∏≠‡∏∑‡πà‡∏ô‡πÜ' }
    ];
    
    saveToLocalStorage('activityTypes', defaultActivityTypes);
    populateActivityTypeDropdowns('activityTypeSelect');
    notifyDataUpdated('activityType', 'reset');
    
    // ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï
    setTimeout(() => {
        autoSelectIfSingle();
    }, 100);
}

function closeActivityTypeModal() {
    document.getElementById('activityTypeModal').style.display = 'none';
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ ===
function toggleManagementActions(actionsId, otherActionsId) {
    const actions = document.getElementById(actionsId);
    const otherActions = document.getElementById(otherActionsId);
    
    if (!actions) {
        console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö element: ${actionsId}`);
        return;
    }
    
    // ‡∏õ‡∏¥‡∏î‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡∏≠‡∏µ‡∏Å‡∏ù‡∏±‡πà‡∏á
    if (otherActions) {
        otherActions.style.display = 'none';
        otherActions.classList.remove('active');
    }
    
    // ‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡∏≠‡∏á‡∏ù‡∏±‡πà‡∏á‡∏ô‡∏µ‡πâ
    if (actions.style.display === 'flex' || actions.classList.contains('active')) {
        actions.style.display = 'none';
        actions.classList.remove('active');
    } else {
        actions.style.display = 'flex';
        actions.classList.add('active');
        
        // ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠: ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î
        if (window.innerWidth <= 768) {
            setTimeout(() => {
                actions.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
            }, 100);
        }
    }
    
    console.log(`üîÑ ‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• ${actionsId}: ${actions.style.display}`);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ü‡∏±‡∏ô‡πÄ‡∏ü‡∏∑‡∏≠‡∏á) ===
function checkCustomActivityTypeOption(select) {
    if (select.value === 'custom') {
        document.getElementById('customActivityTypeInput').style.display = 'block';
    } else {
        document.getElementById('customActivityTypeInput').style.display = 'none';
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ü‡∏±‡∏ô‡πÄ‡∏ü‡∏∑‡∏≠‡∏á) ===
function checkCustomOption(select) {
    if (select.value === 'custom') {
        document.getElementById('customPersonInput').style.display = 'block';
    } else {
        document.getElementById('customPersonInput').style.display = 'none';
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function loadUserActivities() {
    const activities = getFromLocalStorage('activities') || [];
    const tbody = document.getElementById('activityBody');
    
    if (!tbody) return;
    
    tbody.innerHTML = '';
    
    if (activities.length === 0) {
        const row = document.createElement('tr');
        row.innerHTML = `<td colspan="7" style="text-align: center; padding: 20px;">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ</td>`;
        tbody.appendChild(row);
        return;
    }
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡πÉ‡∏´‡∏°‡πà‡πÑ‡∏õ‡πÄ‡∏Å‡πà‡∏≤)
    activities.sort((a, b) => {
        const dateCompare = b.date.localeCompare(a.date);
        if (dateCompare !== 0) return dateCompare;
        return b.startTime.localeCompare(a.startTime);
    });
    
    activities.forEach((activity, index) => {
        const row = document.createElement('tr');
        const duration = calculateDuration(activity.startTime, activity.endTime);
        const formattedDuration = formatDuration(duration);
        
        row.innerHTML = `
            <td style="padding: 8px; border: 1px solid #ddd; text-align: center;">${formatDateForDisplay(activity.date)}</td>
            <td style="padding: 8px; border: 1px solid #ddd; text-align: center;">${activity.startTime} - ${activity.endTime}</td>
            <td style="padding: 8px; border: 1px solid #ddd; text-align: center;">${activity.person}</td>
            <td style="padding: 8px; border: 1px solid #ddd; text-align: center;">${activity.activityName}</td>
            <td style="padding: 8px; border: 1px solid #ddd; text-align: center;">${formattedDuration}</td>
            <td style="padding: 8px; border: 1px solid #ddd; text-align: center;">${activity.details || '-'}</td>
            <td style="padding: 8px; border: 1px solid #ddd; text-align: center;">
                <button onclick="editActivity('${activity.id}')" style="background-color: #ffc107; color: black; margin: 2px;">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç</button>
                <button onclick="deleteActivity('${activity.id}')" style="background-color: #dc3545; margin: 2px;">‡∏•‡∏ö</button>
            </td>
        `;
        tbody.appendChild(row);
    });
}

function formatDateForDisplay(dateString) {
    const date = new Date(dateString);
    if (isNaN(date)) return dateString;
    
    const day = date.getDate().toString().padStart(2, '0');
    const month = (date.getMonth() + 1).toString().padStart(2, '0');
    const year = (date.getFullYear() + 543).toString(); // ‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å ‡∏Ñ.‡∏®. ‡πÄ‡∏õ‡πá‡∏ô ‡∏û.‡∏®.
    
    return `${day}/${month}/${year}`;
}

function editActivity(activityId) {
    const allActivities = getFromLocalStorage('activities') || [];
    const activity = allActivities.find(a => a.id === activityId);
    
    if (!activity) return;
    
    // ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á‡πÉ‡∏ô‡∏ü‡∏≠‡∏£‡πå‡∏°
    document.getElementById('personSelect').value = activity.person;
    document.getElementById('activityTypeSelect').value = activity.activityName;
    document.getElementById('activity-date').value = activity.date;
    document.getElementById('start-time').value = activity.startTime;
    document.getElementById('end-time').value = activity.endTime;
    document.getElementById('activity-details').value = activity.details || '';
    
    // ‡∏™‡∏•‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°
    document.getElementById('save-activity-button').classList.add('hidden');
    document.getElementById('update-activity-button').classList.remove('hidden');
    document.getElementById('cancel-edit-activity-button').classList.remove('hidden');
    
    editingActivityId = activityId;
    
    // ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    document.getElementById('add-activity-section').scrollIntoView({ behavior: 'smooth' });
}

function deleteActivity(activityId) {
    if (!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ?')) {
        return;
    }
    
    let allActivities = getFromLocalStorage('activities') || [];
    allActivities = allActivities.filter(a => a.id !== activityId);
    saveToLocalStorage('activities', allActivities);
    
    loadUserActivities();
    notifyActivityDeleted();
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function updateAllActivitiesForPerson(oldName, newName) {
    let allActivities = getFromLocalStorage('activities') || [];
    let updated = false;
    
    allActivities = allActivities.map(activity => {
        if (activity.person === oldName) {
            updated = true;
            return { ...activity, person: newName };
        }
        return activity;
    });
    
    if (updated) {
        saveToLocalStorage('activities', allActivities);
        console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏à‡∏≤‡∏Å "${oldName}" ‡πÄ‡∏õ‡πá‡∏ô "${newName}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
    }
    
    return updated;
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function updateAllActivitiesForActivityType(oldName, newName) {
    let allActivities = getFromLocalStorage('activities') || [];
    let updated = false;
    
    allActivities = allActivities.map(activity => {
        if (activity.activityName === oldName) {
            updated = true;
            return { ...activity, activityName: newName };
        }
        return activity;
    });
    
    if (updated) {
        saveToLocalStorage('activities', allActivities);
        console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏à‡∏≤‡∏Å "${oldName}" ‡πÄ‡∏õ‡πá‡∏ô "${newName}" ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`);
    }
    
    return updated;
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ===
function checkPersonUsage(personName) {
    const allActivities = getFromLocalStorage('activities') || [];
    return allActivities.some(activity => activity.person === personName);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà ===
function checkActivityTypeUsage(activityTypeName) {
    const allActivities = getFromLocalStorage('activities') || [];
    return allActivities.some(activity => activity.activityName === activityTypeName);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡∏≤‡∏°‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function getActivityCountByPerson(personName) {
    const allActivities = getFromLocalStorage('activities') || [];
    return allActivities.filter(activity => activity.person === personName).length;
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function getActivityCountByType(activityTypeName) {
    const allActivities = getFromLocalStorage('activities') || [];
    return allActivities.filter(activity => activity.activityName === activityTypeName).length;
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏•‡∏∞‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™ ===
function arrayBufferToBase64(buffer) { 
    let binary = ''; 
    const bytes = new Uint8Array(buffer); 
    const len = bytes.byteLength; 
    for (let i = 0; i < len; i++) { 
        binary += String.fromCharCode(bytes[i]); 
    } 
    return window.btoa(binary); 
}

function base64ToArrayBuffer(base64) { 
    const binary_string = window.atob(base64); 
    const len = binary_string.length; 
    const bytes = new Uint8Array(len); 
    for (let i = 0; i < len; i++) { 
        bytes[i] = binary_string.charCodeAt(i); 
    } 
    return bytes.buffer; 
}

async function deriveKey(password, salt) { 
    const enc = new TextEncoder(); 
    const keyMaterial = await window.crypto.subtle.importKey('raw', enc.encode(password), { name: 'PBKDF2' }, false, ['deriveKey']); 
    return window.crypto.subtle.deriveKey({ 
        "name": 'PBKDF2', 
        salt: salt, 
        "iterations": 100000, 
        "hash": 'SHA-256' 
    }, keyMaterial, { 
        "name": 'AES-GCM', 
        "length": 256 
    }, true, [ "encrypt", "decrypt" ] ); 
}

async function encryptData(dataString, password) { 
    const salt = window.crypto.getRandomValues(new Uint8Array(16)); 
    const iv = window.crypto.getRandomValues(new Uint8Array(12)); 
    const key = await deriveKey(password, salt); 
    const enc = new TextEncoder(); 
    const encodedData = enc.encode(dataString); 
    const encryptedContent = await window.crypto.subtle.encrypt({ 
        name: 'AES-GCM', 
        iv: iv 
    }, key, encodedData); 
    return { 
        isEncrypted: true, 
        salt: arrayBufferToBase64(salt), 
        iv: arrayBufferToBase64(iv), 
        encryptedData: arrayBufferToBase64(encryptedContent) 
    }; 
}

async function decryptData(encryptedPayload, password) { 
    try { 
        const salt = base64ToArrayBuffer(encryptedPayload.salt); 
        const iv = base64ToArrayBuffer(encryptedPayload.iv); 
        const data = base64ToArrayBuffer(encryptedPayload.encryptedData); 
        const key = await deriveKey(password, salt); 
        const decryptedContent = await window.crypto.subtle.decrypt({ 
            name: 'AES-GCM', 
            iv: iv 
        }, key, data); 
        const dec = new TextDecoder(); 
        return dec.decode(decryptedContent); 
    } catch (e) { 
        console.error("Decryption failed:", e); 
        return null; 
    } 
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ===
function saveBackupPassword(e) {
    if (e) e.preventDefault();
    
    const newPassword = document.getElementById('backup-password').value;
    const confirmPassword = document.getElementById('backup-password-confirm').value;
    
    if (!newPassword) {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô = ‡∏•‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏î‡∏¥‡∏°
        backupPassword = null;
        saveToLocalStorage('backupPassword', null);
        showToast('‡∏•‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
        
        // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ä‡πà‡∏≠‡∏á input
        document.getElementById('backup-password').value = '';
        document.getElementById('backup-password-confirm').value = '';
        
        renderBackupPasswordStatus();
        return;
    }
    
    if (newPassword !== confirmPassword) {
        alert('‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
        return;
    }
    
    if (newPassword.length < 4) {
        alert('‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏≤‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 4 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£');
        return;
    }
    
    backupPassword = newPassword;
    saveToLocalStorage('backupPassword', backupPassword);
    showToast('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
    
    // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ä‡πà‡∏≠‡∏á input
    document.getElementById('backup-password').value = '';
    document.getElementById('backup-password-confirm').value = '';
    
    renderBackupPasswordStatus();
}

function clearBackupPassword() {
    if (!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•?')) {
        return;
    }
    
    backupPassword = null;
    saveToLocalStorage('backupPassword', null);
    showToast('‡∏•‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
    renderBackupPasswordStatus();
    
    // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ä‡πà‡∏≠‡∏á input
    const backupPwdInput = document.getElementById('backup-password');
    const backupPwdConfirm = document.getElementById('backup-password-confirm');
    if (backupPwdInput) backupPwdInput.value = '';
    if (backupPwdConfirm) backupPwdConfirm.value = '';
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô ===
function togglePasswordVisibility(inputId, toggleId) {
  const passwordInput = document.getElementById(inputId);
  const toggleIcon = document.getElementById(toggleId);
  
  if (passwordInput.type === 'password') {
    passwordInput.type = 'text';
    toggleIcon.textContent = 'üôà';
  } else {
    passwordInput.type = 'password';
    toggleIcon.textContent = 'üëÅÔ∏è';
  }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ===
function saveToLocal() {
    try {
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏•‡∏á localStorage
        const allActivities = getFromLocalStorage('activities') || [];
        const allPersons = getFromLocalStorage('persons') || [];
        const allActivityTypes = getFromLocalStorage('activityTypes') || [];
        
        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        saveToLocalStorage('activities', allActivities);
        saveToLocalStorage('persons', allPersons);
        saveToLocalStorage('activityTypes', allActivityTypes);
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏£‡∏∏‡∏õ
        const summary = `
            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!
            
            ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:
            ‚Ä¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${allActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
            ‚Ä¢ ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${allPersons.length} ‡∏Ñ‡∏ô
            ‚Ä¢ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${allActivityTypes.length} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
        `;
        
        alert(summary);
        showToast('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
        console.log('üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢');
        
    } catch (error) {
        console.error('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß:', error);
        showToast('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', 'error');
    }
}

function saveDataAndShowToast() {
    const allActivities = getFromLocalStorage('activities') || [];
    const allPersons = getFromLocalStorage('persons') || [];
    const allActivityTypes = getFromLocalStorage('activityTypes') || [];
    
    saveToLocalStorage('activities', allActivities);
    saveToLocalStorage('persons', allPersons);
    saveToLocalStorage('activityTypes', allActivityTypes);
    
    showToast('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏ó‡∏∏‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ) - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà ===
function saveToFile() { 
    closeExportOptionsModal(); 
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const allActivities = getFromLocalStorage('activities') || [];
    const allPersons = getFromLocalStorage('persons') || [];
    const allActivityTypes = getFromLocalStorage('activityTypes') || [];
    
    if (allActivities.length === 0 && allPersons.length === 0 && allActivityTypes.length === 0) { 
        alert("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å"); 
        return; 
    } 
    
    // ‡∏ñ‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
    const fileName = prompt("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•):", "‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°");
    if (!fileName) return;
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    handleSaveAs('json', fileName);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡∏°‡πà) ===
async function handleSaveAs(format, fileName) {
    const now = new Date();
    const dateTimeString = `${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}${String(now.getDate()).padStart(2, '0')}_${String(now.getHours()).padStart(2, '0')}${String(now.getMinutes()).padStart(2, '0')}`;
    
    if (format === 'json') {
        const fullFileName = `${fileName}_${dateTimeString}.json`;
        
        // ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        const allActivities = getFromLocalStorage('activities') || [];
        const allPersons = getFromLocalStorage('persons') || [];
        const allActivityTypes = getFromLocalStorage('activityTypes') || [];
        
        const data = { 
            activities: allActivities, 
            persons: allPersons, 
            activityTypes: allActivityTypes, 
            backupDate: new Date().toISOString(),
            version: '2.0',
            appName: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô'
        };
        
        let dataString = JSON.stringify(data, null, 2);
        
        // ‚≠ê ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        if (backupPassword) {
            alert('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
            try {
                const encryptedObject = await encryptData(dataString, backupPassword);
                
                // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™
                const encryptedData = {
                    isEncrypted: true,
                    encryptedVersion: '1.0',
                    salt: encryptedObject.salt,
                    iv: encryptedObject.iv,
                    encryptedData: encryptedObject.encryptedData,
                    backupDate: new Date().toISOString(),
                    appName: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô'
                };
                
                dataString = JSON.stringify(encryptedData, null, 2);
            } catch (e) {
                alert('‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!'); 
                return;
            }
        }
        
        const blob = new Blob([dataString], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a'); 
        a.href = url; 
        a.download = fullFileName; 
        a.click();
        URL.revokeObjectURL(url);
        
        notifyDataManagement('export');
        
        if (backupPassword) {
            showToast('‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
        } else {
            showToast('‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
        }
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î) - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà ===
function exportSelectedAccount() { 
    closeExportOptionsModal(); 
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const allActivities = getFromLocalStorage('activities') || [];
    const allPersons = getFromLocalStorage('persons') || [];
    const allActivityTypes = getFromLocalStorage('activityTypes') || [];
    
    if (allActivities.length === 0 && allPersons.length === 0 && allActivityTypes.length === 0) { 
        alert("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å"); 
        return; 
    } 
    
    // ‡∏ñ‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
    const fileName = prompt("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ô‡∏µ‡πâ (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•):", "‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô");
    if (!fileName) return;
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô JSON ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    handleExportSelectedAs('json', fileName);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà ===
async function handleExportSelectedAs(format, fileName) {
    const allActivities = getFromLocalStorage('activities') || [];
    const allPersons = getFromLocalStorage('persons') || [];
    const allActivityTypes = getFromLocalStorage('activityTypes') || [];
    
    if (allActivities.length === 0 && allPersons.length === 0 && allActivityTypes.length === 0) {
        alert("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å");
        return;
    }
    
    const now = new Date();
    const dateTimeString = `${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}${String(now.getDate()).padStart(2, '0')}_${String(now.getHours()).padStart(2, '0')}${String(now.getMinutes()).padStart(2, '0')}`;
    
    if (format === 'json') {
        const fullFileName = `${fileName}_${dateTimeString}.json`;
        
        // ‡∏£‡∏ß‡∏ö‡∏£‡∏ß‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
        const data = { 
            activities: allActivities, 
            persons: allPersons, 
            activityTypes: allActivityTypes,
            accountName: currentAccount,
            exportDate: new Date().toISOString(),
            version: '2.0',
            appName: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô',
            exportType: 'single_account'
        };
        
        let dataString = JSON.stringify(data, null, 2);
        
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        if (backupPassword) {
            alert('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
            try {
                const encryptedObject = await encryptData(dataString, backupPassword);
                dataString = JSON.stringify(encryptedObject, null, 2);
            } catch (e) {
                alert('‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!'); 
                return;
            }
        }
        
        const blob = new Blob([dataString], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a'); 
        a.href = url; 
        a.download = fullFileName; 
        a.click();
        URL.revokeObjectURL(url);
        
        notifyDataManagement('export');
        showToast('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà ===
function initiateSingleDateExport() {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const allActivities = getFromLocalStorage('activities') || [];
    
    if (allActivities.length === 0) {
        alert("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡πâ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å");
        return;
    }
    
    closeExportOptionsModal();
    
// ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô (‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢)
const thaiToday = getThaiDateString();
document.getElementById('exportStartDate').value = thaiToday;
document.getElementById('exportEndDate').value = thaiToday;
    
    // ‡πÅ‡∏™‡∏î‡∏á Modal ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    document.getElementById('singleDateExportModal').style.display = 'flex';
}

function processDateRangeExport() {
    const startDate = document.getElementById('exportStartDate').value;
    const endDate = document.getElementById('exportEndDate').value;
    
    if (!startDate || !endDate) {
        alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
        return;
    }
    
    if (startDate > endDate) {
        alert("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î");
        return;
    }
    
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    const allActivities = getFromLocalStorage('activities') || [];
    const filteredActivities = allActivities.filter(activity => {
        return activity.date >= startDate && activity.date <= endDate;
    });
    
    const allPersons = getFromLocalStorage('persons') || [];
    const allActivityTypes = getFromLocalStorage('activityTypes') || [];
    
    if (filteredActivities.length === 0) {
        if (startDate === endDate) {
            alert(`‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(startDate)}`);
        } else {
            alert(`‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(startDate)} ‡∏ñ‡∏∂‡∏á ${formatDateForDisplay(endDate)}`);
        }
        closeSingleDateExportModal();
        return;
    }
    
    // ‡∏ñ‡∏≤‡∏°‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
    let fileName = '';
    if (startDate === endDate) {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
        fileName = prompt("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•):", 
                         `‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà_${formatDateForDisplay(startDate)}`);
    } else {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏•‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
        fileName = prompt("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πâ (‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•):", 
                         `‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà_${formatDateForDisplay(startDate)}_‡∏ñ‡∏∂‡∏á_${formatDateForDisplay(endDate)}`);
    }
    
    if (!fileName) {
        closeSingleDateExportModal();
        return;
    }
    
    const backupData = {
        activities: filteredActivities,
        persons: allPersons,
        activityTypes: allActivityTypes,
        backupDate: new Date().toISOString(),
        version: '2.0',
        appName: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô',
        backupType: startDate === endDate ? 'single_date' : 'date_range',
        startDate: startDate,
        endDate: endDate,
        totalActivities: filteredActivities.length
    };
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô JSON
    handleDateRangeExportAs('json', fileName, backupData);
    closeSingleDateExportModal();
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏ö‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™ - ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏´‡∏°‡πà ===
async function handleDateRangeExportAs(format, fileName, backupData) {
    const now = new Date();
    const dateTimeString = `${now.getFullYear()}${String(now.getMonth() + 1).padStart(2, '0')}${String(now.getDate()).padStart(2, '0')}_${String(now.getHours()).padStart(2, '0')}${String(now.getMinutes()).padStart(2, '0')}`;
    
    if (format === 'json') {
        const fullFileName = `${fileName}_${dateTimeString}.json`;
        let dataString = JSON.stringify(backupData, null, 2);
        
        // ‚≠ê ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
        if (backupPassword) {
            alert('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
            try {
                const encryptedObject = await encryptData(dataString, backupPassword);
                
                // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™
                const encryptedData = {
                    isEncrypted: true,
                    encryptedVersion: '1.0',
                    salt: encryptedObject.salt,
                    iv: encryptedObject.iv,
                    encryptedData: encryptedObject.encryptedData,
                    backupDate: new Date().toISOString(),
                    appName: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô',
                    backupType: backupData.backupType,
                    startDate: backupData.startDate,
                    endDate: backupData.endDate,
                    totalActivities: backupData.totalActivities
                };
                
                dataString = JSON.stringify(encryptedData, null, 2);
            } catch (e) {
                alert('‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß!'); 
                return;
            }
        }
        
        const blob = new Blob([dataString], { type: 'application/json' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a'); 
        a.href = url; 
        a.download = fullFileName; 
        a.click();
        URL.revokeObjectURL(url);
        
        // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
        if (backupData.startDate === backupData.endDate) {
            showToast(`‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(backupData.startDate)} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`, 'success');
        } else {
            showToast(`‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(backupData.startDate)} ‡∏ñ‡∏∂‡∏á ${formatDateForDisplay(backupData.endDate)} ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß`, 'success');
        }
    }
}

function exportActivities() {
    const allActivities = getFromLocalStorage('activities') || [];
    
    if (allActivities.length === 0) {
        alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏ß‡πâ');
        return;
    }
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö DDMMYYYYHHMM (‡πÉ‡∏ä‡πâ‡∏õ‡∏µ ‡∏û.‡∏®.)
    const now = new Date();
    const day = now.getDate().toString().padStart(2, '0');
    const month = (now.getMonth() + 1).toString().padStart(2, '0');
    const year = (now.getFullYear() + 543).toString(); // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô ‡∏û.‡∏®.
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
    
    const timestamp = day + month + year + hours + minutes;

    const dataStr = JSON.stringify(allActivities, null, 2);
    const dataBlob = new Blob([dataStr], { type: 'application/json' });
    
    const url = URL.createObjectURL(dataBlob);
    const link = document.createElement('a');
    link.href = url;
    link.download = `‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°${timestamp}.json`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    URL.revokeObjectURL(url);
    
    notifyDataManagement('export');
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™) ===
function restoreData(file) {
    if (!file) return;
    
    const reader = new FileReader();
    
    reader.onload = async function(e) {
        try {
            let content = e.target.result;
            let backupData;
            
            console.log('‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ:', content.substring(0, 200)); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö debug
            
            // ‡∏•‡∏≠‡∏á‡∏≠‡πà‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô JSON ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤‡∏Å‡πà‡∏≠‡∏ô
            try {
                backupData = JSON.parse(content);
                console.log('‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™');
            } catch (jsonError) {
                console.log('‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà JSON ‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤:', jsonError);
                throw new Error('‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
            }
            
            let finalDataToMerge = null;
            
            // ‚≠ê ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™
            if (backupData && backupData.isEncrypted === true) {
                console.log('‡∏ï‡∏£‡∏ß‡∏à‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™');
                const password = prompt("‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™:");
                if (!password) { 
                    alert("‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå"); 
                    document.getElementById('restoreFile').value = ''; 
                    return; 
                }
                
                alert('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™...');
                try {
                    const decryptedString = await decryptData(backupData, password);
                    if (decryptedString) {
                        finalDataToMerge = JSON.parse(decryptedString);
                        console.log('‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!');
                    } else {
                        alert("‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß! ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"); 
                        document.getElementById('restoreFile').value = ''; 
                        return;
                    }
                } catch (decryptError) {
                    console.error('‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™:', decryptError);
                    alert("‡∏ñ‡∏≠‡∏î‡∏£‡∏´‡∏±‡∏™‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß! ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏≠‡∏≤‡∏à‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"); 
                    document.getElementById('restoreFile').value = ''; 
                    return;
                }
            } else {
                // ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™
                finalDataToMerge = backupData;
            }
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            if (!finalDataToMerge || typeof finalDataToMerge !== 'object') {
                throw new Error('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
            }
            
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ (‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏ö‡∏ö‡∏¢‡∏∑‡∏î‡∏´‡∏¢‡∏∏‡πà‡∏ô‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô)
            const isValidBackup = isValidBackupFile(finalDataToMerge);
            
            if (!isValidBackup) {
                throw new Error('‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°');
            }
            
            if (!confirm('‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô ‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
                document.getElementById('restoreFile').value = '';
                return;
            }
            
            // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏∞‡∏ö‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏ö‡∏ö‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó
            updateDataWithBackup(finalDataToMerge);
            
        } catch (error) {
            console.error('Error restoring data:', error);
            alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ: ' + error.message);
            document.getElementById('restoreFile').value = '';
        }
    };
    
    reader.onerror = function() {
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå');
        document.getElementById('restoreFile').value = '';
    };
    
    reader.readAsText(file);
}

function isValidBackupFile(data) {
    if (!data || typeof data !== 'object') {
        return false;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ
    const possibleStructures = [
        // ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
        () => data.activities !== undefined && Array.isArray(data.activities),
        // ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ persons ‡πÅ‡∏•‡∏∞ activityTypes
        () => data.persons !== undefined && data.activityTypes !== undefined,
        // ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ appName ‡πÅ‡∏•‡∏∞ version
        () => data.appName === '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô',
        // ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ backupDate
        () => data.backupDate !== undefined,
        // ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô array ‡∏Ç‡∏≠‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
        () => Array.isArray(data) && data.length > 0 && data[0].activityName !== undefined,
        // ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡∏´‡∏±‡∏™
        () => data.isEncrypted === true && data.encryptedData !== undefined
    ];
    
    // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÉ‡∏î‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á ‡∏Å‡πá‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    return possibleStructures.some(check => {
        try {
            return check();
        } catch (e) {
            return false;
        }
    });
}

function updateDataWithBackup(backupData) {
    let updatedCount = {
        activities: 0,
        persons: 0,
        activityTypes: 0
    };
    
    // 1. ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    if (backupData.activities && Array.isArray(backupData.activities)) {
        const currentActivities = getFromLocalStorage('activities') || [];
        const mergedActivities = mergeActivities(currentActivities, backupData.activities);
        saveToLocalStorage('activities', mergedActivities);
        updatedCount.activities = mergedActivities.length - currentActivities.length;
    }
    
    // 2. ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    if (backupData.persons && Array.isArray(backupData.persons)) {
        const currentPersons = getFromLocalStorage('persons') || [];
        const mergedPersons = mergePersons(currentPersons, backupData.persons);
        saveToLocalStorage('persons', mergedPersons);
        updatedCount.persons = mergedPersons.length - currentPersons.length;
    }
    
    // 3. ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    if (backupData.activityTypes && Array.isArray(backupData.activityTypes)) {
        const currentActivityTypes = getFromLocalStorage('activityTypes') || [];
        const mergedActivityTypes = mergeActivityTypes(currentActivityTypes, backupData.activityTypes);
        saveToLocalStorage('activityTypes', mergedActivityTypes);
        updatedCount.activityTypes = mergedActivityTypes.length - currentActivityTypes.length;
    }
    
    // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏õ‡πá‡∏ô array ‡∏Ç‡∏≠‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
    if (Array.isArray(backupData)) {
        const currentActivities = getFromLocalStorage('activities') || [];
        const mergedActivities = mergeActivities(currentActivities, backupData);
        saveToLocalStorage('activities', mergedActivities);
        updatedCount.activities = mergedActivities.length - currentActivities.length;
    }
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    loadUserActivities();
    populateActivityTypeDropdowns('activityTypeSelect');
    populatePersonDropdown('personSelect');
    populatePersonFilter();
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô
    showRestoreSummary(updatedCount);
    
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï input file
    document.getElementById('restoreFile').value = '';
}

function mergeActivities(currentActivities, newActivities) {
    const merged = [...currentActivities];
    const existingIds = new Set(currentActivities.map(a => a.id));
    
    newActivities.forEach(newActivity => {
        // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ ID ‡∏ã‡πâ‡∏≥ ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà
        if (!existingIds.has(newActivity.id)) {
            merged.push(newActivity);
            existingIds.add(newActivity.id);
        }
        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ ID ‡∏ã‡πâ‡∏≥ ‡πÅ‡∏ï‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡∏î‡πâ‡∏ß‡∏¢ ID ‡πÉ‡∏´‡∏°‡πà
        else if (newActivity.person && !currentActivities.some(a => a.id === newActivity.id && a.person === newActivity.person)) {
            const newActivityWithNewId = {
                ...newActivity,
                id: Date.now().toString() + Math.random().toString(36).substr(2, 9)
            };
            merged.push(newActivityWithNewId);
        }
    });
    
    return merged;
}

function mergePersons(currentPersons, newPersons) {
    const merged = [...currentPersons];
    const existingNames = new Set(currentPersons.map(p => p.name));
    
    newPersons.forEach(newPerson => {
        if (!existingNames.has(newPerson.name)) {
            merged.push(newPerson);
            existingNames.add(newPerson.name);
        }
    });
    
    return merged;
}

function mergeActivityTypes(currentTypes, newTypes) {
    const merged = [...currentTypes];
    const existingNames = new Set(currentTypes.map(t => t.name));
    
    newTypes.forEach(newType => {
        if (!existingNames.has(newType.name)) {
            merged.push(newType);
            existingNames.add(newType.name);
        }
    });
    
    return merged;
}

function showRestoreSummary(updatedCount) {
    let summaryMessage = '‡∏Å‡∏π‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!\n\n';
    
    if (updatedCount.activities > 0) {
        summaryMessage += `‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà: ${updatedCount.activities} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    } else {
        summaryMessage += `‚Ä¢ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà\n`;
    }
    
    if (updatedCount.persons > 0) {
        summaryMessage += `‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà: ${updatedCount.persons} ‡∏Ñ‡∏ô\n`;
    } else {
        summaryMessage += `‚Ä¢ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà\n`;
    }
    
    if (updatedCount.activityTypes > 0) {
        summaryMessage += `‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà: ${updatedCount.activityTypes} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n`;
    } else {
        summaryMessage += `‚Ä¢ ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà\n`;
    }
    
    alert(summaryMessage);
    notifyDataManagement('restore');
}

function deleteActivitiesByDate() {
    const dateToDelete = document.getElementById('deleteByDateInput').value;
    
    if (!dateToDelete) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö');
        return;
    }
    
    if (!confirm(`‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(dateToDelete)}?`)) {
        return;
    }
    
    let allActivities = getFromLocalStorage('activities') || [];
    const initialLength = allActivities.length;
    
    allActivities = allActivities.filter(activity => activity.date !== dateToDelete);
    
    if (allActivities.length === initialLength) {
        alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å');
        return;
    }
    
    saveToLocalStorage('activities', allActivities);
    loadUserActivities();
    document.getElementById('deleteByDateInput').value = '';
    notifyDataManagement('deleteByDate');
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function loadSummaryData() {
    const summaryType = document.getElementById('summary-type-select').value;
    const datePicker = document.getElementById('summary-date-picker');
    const dateRangePicker = document.getElementById('summary-date-range');
    
    // ‚úÖ ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ
    updateSummaryPersonDisplay();
    
    // ‡∏ã‡πà‡∏≠‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô
    datePicker.classList.add('hidden');
    dateRangePicker.classList.add('hidden');
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    switch(summaryType) {
        case 'single-day':
            datePicker.classList.remove('hidden');
            break;
        case 'date-range':
            dateRangePicker.classList.remove('hidden');
            break;
        case 'brief-summary':
        case 'all-time':
            // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á input ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
            break;
    }
    
    console.log(`üìä ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏™‡∏£‡∏∏‡∏õ: ${summaryType}`);
}

function viewSummary() {
    const summaryType = document.getElementById('summary-type-select').value;
    const datePicker = document.getElementById('summary-date');
    const startDatePicker = document.getElementById('summary-start-date');
    const endDatePicker = document.getElementById('summary-end-date');

    let startDate, endDate;
    
    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const allPersons = getFromLocalStorage('persons') || [];
    let actualPersonFilter = 'all';
    
    if (allPersons.length === 1) {
        actualPersonFilter = allPersons[0].name;
        console.log(`‚úÖ ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß: ${actualPersonFilter}, ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥`);
    } else {
        const personFilter = document.getElementById('personFilter');
        actualPersonFilter = personFilter ? personFilter.value : 'all';
    }
    
    switch(summaryType) {
        case 'single-day':
            if (!datePicker.value) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà');
                return;
            }
            startDate = endDate = datePicker.value;
            break;
        case 'date-range':
            if (!startDatePicker.value || !endDatePicker.value) {
                alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
                return;
            }
            startDate = startDatePicker.value;
            endDate = endDatePicker.value;
            
            if (startDate > endDate) {
                alert('‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î');
                return;
            }
            break;
        case 'all-time':
        case 'brief-summary':
            startDate = null;
            endDate = null;
            break;
    }

    generateSummary(startDate, endDate, summaryType, actualPersonFilter);
}

function generateSummary(startDate, endDate, summaryType, personFilter = 'all') {
    const allActivities = getFromLocalStorage('activities') || [];
    const allPersons = getFromLocalStorage('persons') || [];
    
    // ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    let actualPersonFilter = personFilter;
    if (allPersons.length === 1 && personFilter === 'all') {
        actualPersonFilter = allPersons[0].name;
        console.log(`‚úÖ ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß: ${actualPersonFilter}, ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥`);
    }
    
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    let filteredActivities = allActivities;
    
    if (startDate && endDate) {
        filteredActivities = allActivities.filter(activity => {
            return activity.date >= startDate && activity.date <= endDate;
        });
    } else if (startDate) {
        filteredActivities = allActivities.filter(activity => activity.date === startDate);
    }
    
    // ‡∏Å‡∏£‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (‡πÉ‡∏ä‡πâ actualPersonFilter ‡πÅ‡∏ó‡∏ô personFilter)
    if (actualPersonFilter !== 'all') {
        filteredActivities = filteredActivities.filter(activity => activity.person === actualPersonFilter);
    }
    
    if (filteredActivities.length === 0) {
        let message = '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å';
        if (actualPersonFilter !== 'all') {
            message += ` ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${actualPersonFilter}`;
        }
        alert(message);
        return;
    }
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• context ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å
    summaryContext = {
        type: summaryType,
        startDate: startDate,
        endDate: endDate,
        personFilter: actualPersonFilter, // ‡πÉ‡∏ä‡πâ actualPersonFilter
        activities: filteredActivities
    };
    
    // ‡πÄ‡∏õ‡∏¥‡∏î modal ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    document.getElementById('summaryOutputModal').style.display = 'flex';
    
    console.log(`üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${summaryType}, ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${filteredActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£, ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${actualPersonFilter}`);
}

function handleSummaryOutput(outputType) {
    closeSummaryOutputModal();
    
    switch (outputType) {
        case 'display':
            displaySummary();
            break;
        case 'xlsx':
            // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ XLSX ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
            if (typeof XLSX === 'undefined') {
                alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå XLSX ‡πÑ‡∏î‡πâ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
                return;
            }
            exportSummaryToXLSX();
            break;
        case 'pdf':
            exportSummaryToPDF();
            break;
    }
}

function displaySummary() {
    const { type, activities, startDate, endDate, personFilter } = summaryContext;
    
    if (!activities || activities.length === 0) {
        alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á');
        return;
    }

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ
    const totalDurationAll = activities.reduce((total, activity) => {
        return total + calculateDuration(activity.startTime, activity.endTime);
    }, 0);

    // ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
    const typeTotals = {};
    activities.forEach(activity => {
        const duration = calculateDuration(activity.startTime, activity.endTime);
        if (!typeTotals[activity.activityName]) {
            typeTotals[activity.activityName] = 0;
        }
        typeTotals[activity.activityName] += duration;
    });

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    const activityDates = [...new Set(activities.map(activity => activity.date))];
    const daysWithActivities = activityDates.length;

    // ========== ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ==========
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
    let totalDays = 0;
    let daysWithoutActivities = 0;

    if (startDate && endDate) {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
        const start = new Date(startDate);
        const end = new Date(endDate);
        totalDays = Math.floor((end - start) / (1000 * 60 * 60 * 24)) + 1;
        daysWithoutActivities = totalDays - daysWithActivities;
    } else if (startDate) {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ß‡∏±‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
        totalDays = 1;
        daysWithoutActivities = daysWithActivities > 0 ? 0 : 1;
    } else {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡πÉ‡∏ä‡πâ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ)
        if (activityDates.length > 0) {
            const sortedDates = activityDates.sort();
            const firstDate = new Date(sortedDates[0]);
            const lastDate = new Date(sortedDates[sortedDates.length - 1]);
            totalDays = Math.floor((lastDate - firstDate) / (1000 * 60 * 60 * 24)) + 1;
            daysWithoutActivities = totalDays - daysWithActivities;
        } else {
            totalDays = 0;
            daysWithoutActivities = 0;
        }
    }
    // ========== ‡∏à‡∏ö‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° ==========

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    let dateRangeText = '';
    if (startDate && endDate) {
        if (startDate === endDate) {
            dateRangeText = `‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(startDate)}`;
        } else {
            dateRangeText = `‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(startDate)} ‡∏ñ‡∏∂‡∏á ${formatDateForDisplay(endDate)}`;
        }
    } else if (startDate) {
        dateRangeText = `‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(startDate)}`;
    } else {
        const allDates = activityDates.sort();
        if (allDates.length > 0) {
            if (allDates[0] === allDates[allDates.length - 1]) {
                dateRangeText = `‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(allDates[0])}`;
            } else {
                dateRangeText = `‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(allDates[0])} ‡∏ñ‡∏∂‡∏á ${formatDateForDisplay(allDates[allDates.length - 1])}`;
            }
        } else {
            dateRangeText = '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å';
        }
    }

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô
    const avgDurationPerDay = daysWithActivities > 0 ? totalDurationAll / daysWithActivities : 0;

    // ‚úÖ ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const allPersons = [...new Set(activities.map(activity => activity.person))];
    const allPersonsInSystem = getFromLocalStorage('persons') || [];
    
    let personSummaryText = '';
    if (allPersonsInSystem.length === 1) {
        // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö: ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏•‡∏¢
        personSummaryText = `‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á: ${allPersonsInSystem[0].name}`;
    } else if (allPersons.length > 0) {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô: ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        personSummaryText = `‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á: ${personFilter === 'all' ? '‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô' : allPersons.join(', ')}`;
    } else {
        personSummaryText = '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°';
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏´‡∏•‡∏±‡∏Å
    let summaryHTML = `
        <div class="summaryResult" style="font-family: Arial, sans-serif; max-width: 900px; margin: 0 auto; padding: 8px; border: 1.5px solid #F660EB; border-radius: 15px; background-color: #FAFAD2; text-align: center; line-height: 1.0; width: 100%; box-sizing: border-box;">
            <div style="text-align: center; margin: 2px 0;">
                <h3 style="color: blue; font-size: 0.9rem; line-height: 1.0; margin: 2px 0;">
                    ${personSummaryText}
                </h3>
            </div>
            <div style="text-align: center; margin: 2px 0;">
                <h3 style="color: blue; font-size: 0.9rem; line-height: 1.0; margin: 2px 0;">
                    ‡∏™‡∏£‡∏∏‡∏õ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${getCurrentDateTimeThai().replace(/(\d{2}\/\d{2}\/\d{4}) (\d{2}:\d{2})/, '$1 ‡πÄ‡∏ß‡∏•‡∏≤ $2 ‡∏ô.')}
                </h3>
            </div>
            <div style="text-align: center; margin: 2px 0;">
                <h3 style="color: blue; font-size: 0.9rem; line-height: 1.0; margin: 2px 0;">
                    ${dateRangeText}
                </h3>
            </div>

            <div style="background-color: #FAFAD2; padding: 5px; margin: 5px 0; text-align: center; color: blue;">
                <h4 style="margin: 5px 0; font-size: 0.9rem; line-height: 1.0;">‡∏™‡∏£‡∏∏‡∏õ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô</h4>
                <p style="margin: 3px 0; font-size: 0.9rem; line-height: 1.2;">‚Ä¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalDays} ‡∏ß‡∏±‡∏ô</p>
                <p style="margin: 3px 0; font-size: 0.9rem; line-height: 1.2;">‚Ä¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${daysWithActivities} ‡∏ß‡∏±‡∏ô</p>
                <p style="margin: 3px 0; font-size: 0.9rem; line-height: 1.2;">‚Ä¢ ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${daysWithoutActivities} ‡∏ß‡∏±‡∏ô</p>
                <p style="margin: 3px 0; font-size: 0.9rem; line-height: 1.2;">‚Ä¢ ‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô: ${formatDuration(avgDurationPerDay)}</p>
                <p style="margin: 3px 0; font-size: 0.9rem; line-height: 1.2;">‚Ä¢ ‡∏£‡∏ß‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${formatDuration(totalDurationAll)}</p>
            </div>

            <h4 style="color: #0056b3; margin: 5px 0; font-size: 0.9rem;">
                ‡∏™‡∏£‡∏∏‡∏õ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
            </h4>
            <table style="width: 100%; border-collapse: collapse; margin: 8px 0; font-size: 0.9rem;">
                <thead>
                    <tr style="background-color: #007bff; color: white;">
                        <th style="padding: 6px; border: 1px solid #ddd;">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</th>
                        <th style="padding: 6px; border: 1px solid #ddd;">‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏ß‡∏°</th>
                    </tr>
                </thead>
                <tbody>
    `;

    Object.entries(typeTotals).forEach(([type, duration]) => {
        summaryHTML += `
            <tr>
                <td style="padding: 5px; border: 1px solid #ddd;">${type}</td>
                <td style="padding: 5px; border: 1px solid #ddd;">${formatDuration(duration)}</td>
            </tr>
        `;
    });

    summaryHTML += `
                </tbody>
            </table>
    `;

    // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏¢‡πà‡∏≠
    if (type === 'brief-summary') {
        summaryHTML += `
            <h4 style="color: #0056b3; margin: 5px 0; font-size: 0.9rem;">
                ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î (6 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
            </h4>
            <table style="width: 100%; border-collapse: collapse; margin: 8px 0; font-size: 0.8rem;">
                <thead>
                    <tr style="background-color: #007bff; color: white;">
                        <th style="padding: 6px; border: 1px solid #ddd;">‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</th>
                        <th style="padding: 6px; border: 1px solid #ddd;">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                        <th style="padding: 6px; border: 1px solid #ddd;">‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°&‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î</th>
                        <th style="padding: 6px; border: 1px solid #ddd;">‡∏£‡∏ß‡∏°‡πÄ‡∏ß‡∏•‡∏≤</th>
                        <th style="padding: 6px; border: 1px solid #ddd;">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
                    </tr>
                </thead>
                <tbody>
        `;

        const latestActivities = [...activities]
            .sort((a, b) => {
                const dateCompare = b.date.localeCompare(a.date);
                if (dateCompare !== 0) return dateCompare;
                return b.startTime.localeCompare(a.startTime);
            })
            .slice(0, 6);

        latestActivities.forEach(activity => {
            const duration = calculateDuration(activity.startTime, activity.endTime);
            summaryHTML += `
                <tr>
                    <td style="padding: 5px; border: 1px solid #ddd;">${activity.activityName}</td>
                    <td style="padding: 5px; border: 1px solid #ddd;">${formatDateForDisplay(activity.date)}</td>
                    <td style="padding: 5px; border: 1px solid #ddd;">${activity.startTime} - ${activity.endTime}</td>
                    <td style="padding: 5px; border: 1px solid #ddd;">${formatDuration(duration)}</td>
                    <td style="padding: 5px; border: 1px solid #ddd;">${activity.details || '-'}</td>
                </tr>
            `;
        });

        summaryHTML += `
                </tbody>
            </table>
        `;
    } else {
        // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°
        summaryHTML += `
            <h4 style="color: #0056b3; margin: 5px 0; font-size: 0.9rem;">
                ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (${activities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)
            </h4>
            <table style="width: 100%; border-collapse: collapse; margin: 8px 0; font-size: 0.8rem;">
                <thead>
                    <tr style="background-color: #007bff; color: white;">
                        <th style="padding: 6px; border: 1px solid #ddd;">‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</th>
                        <th style="padding: 6px; border: 1px solid #ddd;">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                        <th style="padding: 6px; border: 1px solid #ddd;">‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°&‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î</th>
                        <th style="padding: 6px; border: 1px solid #ddd;">‡∏£‡∏ß‡∏°‡πÄ‡∏ß‡∏•‡∏≤</th>
                        <th style="padding: 6px; border: 1px solid #ddd;">‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
                    </tr>
                </thead>
                <tbody>
        `;

        const sortedActivities = [...activities].sort((a, b) => {
            const dateCompare = b.date.localeCompare(a.date);
            if (dateCompare !== 0) return dateCompare;
            return b.startTime.localeCompare(a.startTime);
        });

        sortedActivities.forEach(activity => {
            const duration = calculateDuration(activity.startTime, activity.endTime);
            summaryHTML += `
                <tr>
                    <td style="padding: 5px; border: 1px solid #ddd;">${activity.activityName}</td>
                    <td style="padding: 5px; border: 1px solid #ddd;">${formatDateForDisplay(activity.date)}</td>
                    <td style="padding: 5px; border: 1px solid #ddd;">${activity.startTime} - ${activity.endTime}</td>
                    <td style="padding: 5px; border: 1px solid #ddd;">${formatDuration(duration)}</td>
                    <td style="padding: 5px; border: 1px solid #ddd;">${activity.details || '-'}</td>
                </tr>
            `;
        });

        summaryHTML += `
                </tbody>
            </table>
        `;
    }

    summaryHTML += `</div>`;

    // ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏ô modal
    document.getElementById('modalBodyContent').innerHTML = summaryHTML;
    document.getElementById('summaryModal').style.display = 'flex';
}

function exportSummaryToXLSX() {
    // ‡πÉ‡∏ä‡πâ SheetJS library ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å XLSX
    if (typeof XLSX === 'undefined') {
        alert('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå XLSX ‡πÑ‡∏î‡πâ ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
        return;
    }
    
    const { activities } = summaryContext;
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Excel
    const worksheetData = [
        ['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà', '‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô', '‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î', '‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°', '‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°', '‡∏£‡∏ß‡∏°‡πÄ‡∏ß‡∏•‡∏≤', '‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î']
    ];
    
    activities.forEach(activity => {
        const duration = calculateDuration(activity.startTime, activity.endTime);
        const formattedDuration = formatDuration(duration);
        
        worksheetData.push([
            formatDateForDisplay(activity.date),
            activity.startTime,
            activity.endTime,
            activity.person,
            activity.activityName,
            formattedDuration,
            activity.details || ''
        ]);
    });
    
    const worksheet = XLSX.utils.aoa_to_sheet(worksheetData);
    const workbook = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(workbook, worksheet, '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°');
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
    let fileName = '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏£‡∏∏‡∏õ';
    if (summaryContext.type === 'today') {
        fileName = `‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°_${formatDateForDisplay(summaryContext.date)}`;
    } else if (summaryContext.type === 'customDate') {
        fileName = `‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°_${formatDateForDisplay(summaryContext.date)}`;
    } else if (summaryContext.type === 'dateRange') {
        fileName = `‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°_${formatDateForDisplay(summaryContext.startDate)}_‡∏ñ‡∏∂‡∏á_${formatDateForDisplay(summaryContext.endDate)}`;
    } else {
        fileName = '‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î';
    }
    
    XLSX.writeFile(workbook, `${fileName}.xlsx`);
    notifyDataManagement('export');
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå PDF ‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÅ‡∏•‡πâ‡∏ß ===
function exportSummaryToPDF() {
    const { type, activities, startDate, endDate, date } = summaryContext;
    
    if (!activities || activities.length === 0) {
        alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á PDF');
        return;
    }
    
    const allPersons = [...new Set(activities.map(activity => activity.person))];
    const personSummaryText = allPersons.length === 1 
        ? `‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á: ${allPersons[0]}` 
        : allPersons.length > 1 
            ? '‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á: ‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏ô' 
            : '‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏Ç‡∏≠‡∏á: ‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏';

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ
    const totalDurationAll = activities.reduce((total, activity) => {
        return total + calculateDuration(activity.startTime, activity.endTime);
    }, 0);
    
    // ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
    const typeTotals = {};
    activities.forEach(activity => {
        const duration = calculateDuration(activity.startTime, activity.endTime);
        if (!typeTotals[activity.activityName]) {
            typeTotals[activity.activityName] = 0;
        }
        typeTotals[activity.activityName] += duration;
    });
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô
    const activityDates = [...new Set(activities.map(activity => activity.date))];
    const daysWithActivities = activityDates.length;
    const totalDays = daysWithActivities;
    
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà (‡πÉ‡∏ä‡πâ‡∏õ‡∏µ ‡∏û.‡∏®.)
    let dateRangeText = '';
    if (type === 'dateRange') {
        dateRangeText = `‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(startDate)} ‡∏ñ‡∏∂‡∏á ${formatDateForDisplay(endDate)}`;
    } else if (type === 'today' || type === 'customDate') {
        dateRangeText = `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(date)}`;
    } else {
        const allActivityDates = Array.from(new Set(activities.map(activity => activity.date))).sort();
        if (allActivityDates.length > 0) {
            dateRangeText = `‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(allActivityDates[0])} ‡∏ñ‡∏∂‡∏á ${formatDateForDisplay(allActivityDates[allActivityDates.length - 1])}`;
        } else {
            dateRangeText = '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å';
        }
    }
    
    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô
    const avgDurationPerDay = daysWithActivities > 0 ? totalDurationAll / daysWithActivities : 0;
    const daysWithoutActivities = 0;
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå PDF ‡πÉ‡∏´‡πâ‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡∏û‡πà‡∏ß‡∏á‡∏ó‡πâ‡∏≤‡∏¢ (‡πÉ‡∏ä‡πâ‡∏õ‡∏µ ‡∏û.‡∏®.)
    const now = new Date();
    const thaiYear = now.getFullYear() + 543;
    const month = (now.getMonth() + 1).toString().padStart(2, '0');
    const day = now.getDate().toString().padStart(2, '0');
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
    
    const timestamp = `${day}${month}${thaiYear}_${hours}${minutes}`;
    const fileName = `‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°-${timestamp}.pdf`;

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏¥‡∏°‡∏û‡πå - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏∞‡∏ó‡∏±‡∏î‡∏£‡∏±‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á
    let printHTML = `
        <!DOCTYPE html>
        <html>
        <head>
            <title>${personSummaryText}</title>
            <meta charset="UTF-8">
            <style>
                body { 
                    font-family: Arial, sans-serif; 
                    margin: 5mm 3mm 3mm 3mm; 
                    padding: 0;
                    color: #000;
                    line-height: 1.1;
                    font-size: 9px;
                    text-align: center;
                }
                
                .header { 
                    text-align: center; 
                    margin-bottom: 5px;
                    border-bottom: 1px solid #000;
                    padding-bottom: 3px;
                }
                .header h1 { 
                    margin: 0 0 2px 0; 
                    font-size: 12px;
                }
                .header h2 { 
                    margin: 0 0 2px 0; 
                    font-size: 10px;
                    font-weight: normal;
                }
                .date-range { 
                    font-size: 9px;
                    margin-top: 2px;
                }
                
                /* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡∏∏‡∏õ */
                .summary-date {
                    text-align: center;
                    margin-bottom: 3px;
                    color: blue;
                    font-size: 9px;
                    line-height: 1.0;
                }
                
                .summary-section {
                    margin: 5px 0;
                    text-align: center;
                    page-break-inside: avoid;
                }
                .summary-section h3 { 
                    margin: 0 0 5px 0;
                    font-size: 10px;
                    background-color: #f0f0f0;
                    padding: 3px 5px;
                    text-align: center;
                }
                
                /* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏™‡∏£‡∏∏‡∏õ - ‡∏à‡∏±‡∏î‡∏Å‡∏∂‡πà‡∏á‡∏Å‡∏•‡∏≤‡∏á‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î */
                .summary-content {
                    text-align: center;
                    margin: 0 auto;
                    max-width: 100%;
                    line-height: 1.2;
                }
                .summary-line {
                    margin: 3px 0;
                    padding: 2px 0;
                    border-bottom: 1px dashed #ddd;
                    text-align: center;
                }
                .summary-text {
                    display: inline;
                    white-space: normal;
                    word-wrap: break-word;
                    text-align: center;
                }
                
                /* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° - ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏∞‡∏ó‡∏±‡∏î‡∏£‡∏±‡∏î‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô */
                table { 
                    width: 100%; 
                    border-collapse: collapse; 
                    margin: 3px auto;
                    font-size: 8px;
                    table-layout: fixed;
                    word-wrap: break-word;
                    page-break-inside: avoid;
                }
                th { 
                    background-color: #ddd; 
                    padding: 2px 1px;
                    border: 1px solid #000;
                    text-align: center;
                    white-space: nowrap;
                    font-size: 8px;
                }
                td { 
                    padding: 2px 1px;
                    border: 1px solid #000;
                    word-break: break-word;
                    vertical-align: middle;
                    text-align: center;
                    font-size: 7px;
                    line-height: 1.0;
                }
                
                /* ‡∏õ‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏´‡∏°‡πà‡πÉ‡∏´‡πâ‡∏Å‡∏∞‡∏ó‡∏±‡∏î‡∏£‡∏±‡∏î‡∏°‡∏≤‡∏Å‡∏Ç‡∏∂‡πâ‡∏ô */
                .col-act-name { width: 18%; }
                .col-date { width: 10%; }
                .col-time { width: 12%; }
                .col-duration-small { width: 12%; }
                .col-details { width: 48%; }
                
                .total-row {
                    background-color: #f0f0f0;
                    font-weight: bold;
                }
                
                .page-info {
                    text-align: center;
                    margin-top: 5px;
                    font-size: 7px;
                    color: #666;
                }
                
                /* ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏ö‡πà‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÉ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á */
                table, tr, td, th {
                    page-break-inside: avoid !important;
                }
                
                /* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° */
                .summary-table {
                    width: 100%;
                    margin: 3px 0;
                    font-size: 8px;
                }
                
                .summary-table th,
                .summary-table td {
                    padding: 2px 1px;
                    border: 1px solid #000;
                }

                /* ‡∏•‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ */
                .compact-section {
                    margin: 2px 0;
                }

                /* ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏£‡∏∏‡∏õ */
                .stats-grid {
                    display: grid;
                    grid-template-columns: 1fr 1fr;
                    gap: 2px;
                    margin: 3px 0;
                    font-size: 8px;
                }

                .stat-item {
                    padding: 2px;
                    border: 0.5px solid #ccc;
                    text-align: center;
                }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</h1>
                <h2>${personSummaryText}</h2>
    `;
    
    // ‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏±‡∏ß‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    if (startDate && endDate && startDate !== endDate) {
        printHTML += `<div class="date-range">‡∏ä‡πà‡∏ß‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(startDate)} ‡∏ñ‡∏∂‡∏á ${formatDateForDisplay(endDate)}</div>`;
    } else if (startDate) {
        printHTML += `<div class="date-range">‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(startDate)}</div>`;
    } else {
        const allActivityDates = Array.from(new Set(activities.map(activity => activity.date))).sort();
        if (allActivityDates.length > 0) {
            if (allActivityDates[0] === allActivityDates[allActivityDates.length - 1]) {
                printHTML += `<div class="date-range">‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(allActivityDates[0])}</div>`;
            } else {
                printHTML += `<div class="date-range">‡∏à‡∏≤‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${formatDateForDisplay(allActivityDates[0])} ‡∏ñ‡∏∂‡∏á ${formatDateForDisplay(allActivityDates[allActivityDates.length - 1])}</div>`;
            }
        } else {
            printHTML += `<div class="date-range">‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</div>`;
        }
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡πà‡∏ß‡∏ô "‡∏™‡∏£‡∏∏‡∏õ‡πÄ‡∏°‡∏∑‡πà‡∏≠"
    printHTML += `
                <div class="summary-date">
                    <h3 style="color: blue; font-size: 9px; line-height: 1.0; margin: 2px 0;">
                        ‡∏™‡∏£‡∏∏‡∏õ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${getCurrentDateTimeThai().replace(/(\d{2}\/\d{2}\/\d{4}) (\d{2}:\d{2})/, '$1 ‡πÄ‡∏ß‡∏•‡∏≤ $2 ‡∏ô.')}
                    </h3>
                </div>
            </div>
    `;
    
    // ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô - ‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏∞‡∏ó‡∏±‡∏î‡∏£‡∏±‡∏î
    printHTML += `
            <div class="summary-section compact-section">
                <h3>‡∏™‡∏£‡∏∏‡∏õ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô</h3>
                <div class="stats-grid">
                    <div class="stat-item">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î<br>${totalDays} ‡∏ß‡∏±‡∏ô</div>
                    <div class="stat-item">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°<br>${daysWithActivities} ‡∏ß‡∏±‡∏ô</div>
                    <div class="stat-item">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°<br>${daysWithoutActivities} ‡∏ß‡∏±‡∏ô</div>
                    <div class="stat-item">‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô<br>${formatDuration(avgDurationPerDay)}</div>
                </div>
                <div style="margin-top: 2px; font-weight: bold;">
                    ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${formatDuration(totalDurationAll)}
                </div>
            </div>
    `;
    
    // ‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏£‡∏∏‡∏õ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    printHTML += `
            <div class="summary-section compact-section">
                <h3>‡∏™‡∏£‡∏∏‡∏õ‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</h3>
                <table class="summary-table">
                    <thead>
                        <tr>
                            <th>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</th>
                            <th>‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏ß‡∏°</th>
                        </tr>
                    </thead>
                    <tbody>
    `;
    
    Object.entries(typeTotals).forEach(([type, duration]) => {
        printHTML += `
            <tr>
                <td>${type}</td>
                <td>${formatDuration(duration)}</td>
            </tr>
        `;
    });
    
    printHTML += `
                        <tr class="total-row">
                            <td><strong>‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</strong></td>
                            <td><strong>${formatDuration(totalDurationAll)}</strong></td>
                        </tr>
                    </tbody>
                </table>
            </div>
    `;
    
    // ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏´‡πâ‡∏Å‡∏∞‡∏ó‡∏±‡∏î‡∏£‡∏±‡∏î‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î)
    if (activities.length > 0) {
        printHTML += `
            <div class="summary-section compact-section">
                <h3>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (${activities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)</h3>
                <table>
                    <colgroup>
                        <col class="col-act-name">
                        <col class="col-date">
                        <col class="col-time">
                        <col class="col-duration-small">
                        <col class="col-details">
                    </colgroup>
                    <thead>
                        <tr>
                            <th>‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°</th>
                            <th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th>
                            <th>‡πÄ‡∏ß‡∏•‡∏≤</th>
                            <th>‡∏£‡∏ß‡∏°‡πÄ‡∏ß‡∏•‡∏≤</th>
                            <th>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î</th>
                        </tr>
                    </thead>
                    <tbody>
        `;
        
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤
        const sortedActivities = [...activities].sort((a, b) => {
            const dateCompare = b.date.localeCompare(a.date);
            if (dateCompare !== 0) return dateCompare;
            return b.startTime.localeCompare(a.startTime);
        });
        
        sortedActivities.forEach(activity => {
            const duration = calculateDuration(activity.startTime, activity.endTime);
            printHTML += `
                <tr>
                    <td>${activity.activityName}</td>
                    <td>${formatDateForDisplay(activity.date)}</td>
                    <td>${activity.startTime}-${activity.endTime}</td>
                    <td>${formatDuration(duration)}</td>
                    <td>${activity.details || '-'}</td>
                </tr>
            `;
        });
        
        printHTML += `
                    </tbody>
                </table>
            </div>
        `;
    } else {
        printHTML += `
            <div class="summary-section compact-section">
                <h3>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</h3>
                <p>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å</p>
            </div>
        `;
    }
    
    printHTML += `
            <div class="page-info">
                ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠: ${new Date().toLocaleDateString('th-TH')} - ‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
            </div>
        </body>
        </html>
    `;
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏¥‡∏°‡∏û‡πå
    const printWindow = window.open('', '_blank');
    if (!printWindow) {
        alert('‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡∏õ‡πä‡∏≠‡∏õ‡∏≠‡∏±‡∏û‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå PDF');
        return;
    }
    
    // ‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠ title ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á (‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å)
    printWindow.document.title = fileName;
    
    // ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô HTML ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÉ‡∏´‡∏°‡πà
    printWindow.document.open();
    printWindow.document.write(printHTML);
    printWindow.document.close();
    
    // ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à
    printWindow.onload = function() {
        setTimeout(function() {
            printWindow.print();
        }, 500);
    };
    
    showToast('‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡∏û‡∏¥‡∏°‡∏û‡πå PDF...', 'success');
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏™‡∏£‡∏¥‡∏°‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏¥‡∏°‡∏û‡πå PDF ===
function getCurrentDateTimeThai() {
    const now = new Date();
    const thaiYear = now.getFullYear() + 543;
    const day = now.getDate().toString().padStart(2, '0');
    const month = (now.getMonth() + 1).toString().padStart(2, '0');
    const hours = now.getHours().toString().padStart(2, '0');
    const minutes = now.getMinutes().toString().padStart(2, '0');
    
    return `${day}/${month}/${thaiYear} ${hours}:${minutes}`;
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ===
function formatDate(dateString) {
    const date = new Date(dateString);
    if (isNaN(date)) return dateString;
    
    const day = date.getDate().toString().padStart(2, '0');
    const month = (date.getMonth() + 1).toString().padStart(2, '0');
    const year = (date.getFullYear() + 543).toString(); // ‡πÅ‡∏õ‡∏•‡∏á‡∏à‡∏≤‡∏Å ‡∏Ñ.‡∏®. ‡πÄ‡∏õ‡πá‡∏ô ‡∏û.‡∏®.
    
    return `${day}/${month}/${year}`;
}

function closeSummaryModal() {
    document.getElementById('summaryModal').style.display = 'none';
}

function closeSummaryOutputModal() {
    document.getElementById('summaryOutputModal').style.display = 'none';
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û ===
function saveSummaryAsImage() {
    const pinkFrame = document.querySelector('.summaryResult[style*="border: 1.5px solid #F660EB"]');
    
    if (!pinkFrame) {
        alert('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡∏™‡∏µ‡∏ä‡∏°‡∏û‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å');
        return;
    }
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å style ‡πÄ‡∏î‡∏¥‡∏°
    const originalMargin = pinkFrame.style.margin;
    const originalBoxSizing = pinkFrame.style.boxSizing;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° margin ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏ö‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß
    pinkFrame.style.margin = '2px';
    pinkFrame.style.boxSizing = 'content-box';
    
    html2canvas(pinkFrame, {
        scale: 2,
        useCORS: true,
        allowTaint: true,
        backgroundColor: '#FFFFFF',
        logging: false,
        onclone: function(clonedDoc, element) {
            const clonedFrame = element;
            clonedFrame.style.backgroundColor = '#FAFAD2';
        }
    }).then(canvas => {
        // ‡∏™‡∏£‡πâ‡∏≤‡∏á canvas ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏ö‡∏™‡∏µ‡∏Ç‡∏≤‡∏ß‡πÄ‡∏û‡∏¥‡πà‡∏°
        const finalCanvas = document.createElement('canvas');
        const finalCtx = finalCanvas.getContext('2d');
        const borderSize = 2;
        
        finalCanvas.width = canvas.width + (borderSize * 2);
        finalCanvas.height = canvas.height + (borderSize * 2);
        
        finalCtx.fillStyle = '#FFFFFF';
        finalCtx.fillRect(0, 0, finalCanvas.width, finalCanvas.height);
        
        finalCtx.drawImage(canvas, borderSize, borderSize);
        
        pinkFrame.style.margin = originalMargin;
        pinkFrame.style.boxSizing = originalBoxSizing;
        
        const link = document.createElement('a');
        let fileName = '‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°';
        
        // ‡πÉ‡∏ä‡πâ‡∏õ‡∏µ ‡∏û.‡∏®. ‡πÉ‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå
        if (summaryContext.type === 'today') {
            const today = new Date();
            const thaiYear = today.getFullYear() + 543;
            const month = (today.getMonth() + 1).toString().padStart(2, '0');
            const day = today.getDate().toString().padStart(2, '0');
            fileName = `‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°_‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ_${day}${month}${thaiYear}`;
        } else if (summaryContext.type === 'customDate') {
            fileName = `‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°_${formatDateForDisplay(summaryContext.date)}`;
        } else if (summaryContext.type === 'dateRange') {
            fileName = `‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°_${formatDateForDisplay(summaryContext.startDate)}_‡∏ñ‡∏∂‡∏á_${formatDateForDisplay(summaryContext.endDate)}`;
        } else {
            const today = new Date();
            const thaiYear = today.getFullYear() + 543;
            const month = (today.getMonth() + 1).toString().padStart(2, '0');
            const day = today.getDate().toString().padStart(2, '0');
            fileName = `‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°_‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î_${day}${month}${thaiYear}`;
        }
        
        link.download = `${fileName}.png`;
        link.href = finalCanvas.toDataURL('image/png');
        link.click();
        
        showToast('‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
        
    }).catch(error => {
        pinkFrame.style.margin = originalMargin;
        pinkFrame.style.boxSizing = originalBoxSizing;
        
        console.error('Error saving image:', error);
        alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û: ' + error.message);
    });
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡πÅ‡∏•‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏Ç‡∏¢‡∏∞ ===
// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
function cleanDuplicateData() {
    let allActivities = getFromLocalStorage('activities') || [];
    const initialCount = allActivities.length;
    
    if (allActivities.length === 0) {
        alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î');
        return;
    }
    
    // ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ã‡πâ‡∏≥‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ ID
    const uniqueActivities = [];
    const seenIds = new Set();
    
    allActivities.forEach(activity => {
        if (!seenIds.has(activity.id)) {
            seenIds.add(activity.id);
            uniqueActivities.push(activity);
        }
    });
    
    allActivities = uniqueActivities;
    saveToLocalStorage('activities', allActivities);
    
    const removedCount = initialCount - allActivities.length;
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    loadUserActivities();
    
    if (removedCount > 0) {
        showToast(`‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥ ${removedCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`, 'success');
    } else {
        showToast('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥', 'info');
    }
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á
function advancedDataCleanup() {
    if (!confirm('‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á‡∏à‡∏∞‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏ã‡πâ‡∏≥‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå\n\n‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?')) {
        return;
    }
    
    let allActivities = getFromLocalStorage('activities') || [];
    const initialCount = allActivities.length;
    
    if (allActivities.length === 0) {
        alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î');
        return;
    }
    
    // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ã‡πâ‡∏≥‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ ID
    const uniqueActivities = [];
    const seenIds = new Set();
    
    allActivities.forEach(activity => {
        if (!seenIds.has(activity.id)) {
            seenIds.add(activity.id);
            uniqueActivities.push(activity);
        }
    });
    
    // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
    const completeActivities = uniqueActivities.filter(activity => 
        activity.date && 
        activity.startTime && 
        activity.endTime && 
        activity.person && 
        activity.activityName
    );
    
    allActivities = completeActivities;
    saveToLocalStorage('activities', allActivities);
    
    const removedDuplicates = initialCount - uniqueActivities.length;
    const removedIncomplete = uniqueActivities.length - completeActivities.length;
    const totalRemoved = initialCount - completeActivities.length;
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    loadUserActivities();
    
    let message = `‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!\n\n`;
    message += `‚Ä¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ${initialCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    message += `‚Ä¢ ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ã‡πâ‡∏≥: ${removedDuplicates} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    message += `‚Ä¢ ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå: ${removedIncomplete} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    message += `‚Ä¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î: ${completeActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    message += `‚Ä¢ ‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${totalRemoved} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
    
    alert(message);
    showToast('‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
}

// =============================================
// ‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î
// =============================================

function showDataHealthReport() {
    const allActivities = getFromLocalStorage('activities') || [];
    const allPersons = getFromLocalStorage('persons') || [];
    const allActivityTypes = getFromLocalStorage('activityTypes') || [];
    
    let report = "üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n\n";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    report += `üìù ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${allActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
    const incompleteActivities = allActivities.filter(activity => 
        !activity.date || !activity.startTime || !activity.endTime || 
        !activity.person || !activity.activityName
    );
    
    report += `‚ö†Ô∏è  ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${incompleteActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    const invalidTimeActivities = allActivities.filter(activity => {
        const duration = calculateDuration(activity.startTime, activity.endTime);
        return duration <= 0 || isNaN(duration);
    });
    
    report += `‚è∞ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ${invalidTimeActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ã‡πâ‡∏≥
    const duplicateActivities = findDuplicateActivities(allActivities);
    report += `üîÑ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ã‡πâ‡∏≥: ${duplicateActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    report += `üë• ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${allPersons.length} ‡∏Ñ‡∏ô\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ
    const unusedPersons = allPersons.filter(person => 
        !allActivities.some(activity => activity.person === person.name)
    );
    
    report += `üö´ ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ: ${unusedPersons.length} ‡∏Ñ‡∏ô\n\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    report += `üìã ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${allActivityTypes.length} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ
    const unusedActivityTypes = allActivityTypes.filter(type => 
        !allActivities.some(activity => activity.activityName === type.name)
    );
    
    report += `üö´ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ: ${unusedActivityTypes.length} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢
    const corruptedActivities = allActivities.filter(activity => 
        !activity.id || typeof activity.id !== 'string'
    );
    
    report += `‚ùå ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢: ${corruptedActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    
    // ‡πÅ‡∏™‡∏î‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô
    alert(report);
    
    if (incompleteActivities.length === 0 && 
        invalidTimeActivities.length === 0 && 
        duplicateActivities.length === 0 &&
        unusedPersons.length === 0 &&
        unusedActivityTypes.length === 0 &&
        corruptedActivities.length === 0) {
        showToast('‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏†‡∏≤‡∏û‡∏î‡∏µ', 'success');
    } else {
        showToast('‚ö†Ô∏è ‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ö‡∏≤‡∏á‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•', 'warning');
    }
}

function cleanDuplicateData() {
    if (!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥?\n‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ')) {
        return;
    }
    
    const allActivities = getFromLocalStorage('activities') || [];
    const originalCount = allActivities.length;
    
    if (originalCount === 0) {
        alert('‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏´‡πâ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î');
        return;
    }
    
    // ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ã‡πâ‡∏≥
    const uniqueActivities = removeDuplicateActivities(allActivities);
    
    // ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
    const cleanedActivities = uniqueActivities.filter(activity => 
        activity.date && activity.startTime && activity.endTime && 
        activity.person && activity.activityName &&
        calculateDuration(activity.startTime, activity.endTime) > 0
    );
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏•‡πâ‡∏ß
    saveToLocalStorage('activities', cleanedActivities);
    
    const removedCount = originalCount - cleanedActivities.length;
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•
    let report = "üßπ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥\n\n";
    report += `üìù ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î: ${originalCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    report += `üìù ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î: ${cleanedActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    report += `üóëÔ∏è  ‡∏•‡∏ö‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß: ${removedCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n`;
    
    if (removedCount > 0) {
        report += `‚úÖ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!\n`;
        report += `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏ã‡πâ‡∏≥‡∏ã‡πâ‡∏≠‡∏ô‡∏ñ‡∏π‡∏Å‡∏Å‡∏≥‡∏à‡∏±‡∏î‡∏≠‡∏≠‡∏Å‡πÅ‡∏•‡πâ‡∏ß`;
    } else {
        report += `‚ÑπÔ∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î\n`;
        report += `‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏†‡∏≤‡∏û‡∏î‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß`;
    }
    
    alert(report);
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    loadUserActivities();
    
    if (removedCount > 0) {
        showToast(`‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ (‡∏•‡∏ö ${removedCount} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£)`, 'success');
    } else {
        showToast('‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î', 'info');
    }
}

function advancedDataCleanup() {
    if (!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á?\n‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏•‡∏ö:\n‚Ä¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå\n‚Ä¢ ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ\n‚Ä¢ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ\n\n‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ')) {
        return;
    }
    
    const allActivities = getFromLocalStorage('activities') || [];
    const allPersons = getFromLocalStorage('persons') || [];
    const allActivityTypes = getFromLocalStorage('activityTypes') || [];
    
    const originalStats = {
        activities: allActivities.length,
        persons: allPersons.length,
        activityTypes: allActivityTypes.length
    };
    
    // 1. ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
    const cleanedActivities = allActivities.filter(activity => 
        activity.date && activity.startTime && activity.endTime && 
        activity.person && activity.activityName &&
        activity.id && typeof activity.id === 'string' &&
        calculateDuration(activity.startTime, activity.endTime) > 0
    );
    
    // 2. ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ã‡πâ‡∏≥
    const uniqueActivities = removeDuplicateActivities(cleanedActivities);
    
    // 3. ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ
    const usedPersons = new Set(uniqueActivities.map(activity => activity.person));
    const cleanedPersons = allPersons.filter(person => usedPersons.has(person.name));
    
    // 4. ‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ
    const usedActivityTypes = new Set(uniqueActivities.map(activity => activity.activityName));
    const cleanedActivityTypes = allActivityTypes.filter(type => usedActivityTypes.has(type.name));
    
    // 5. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏•‡πâ‡∏ß
    saveToLocalStorage('activities', uniqueActivities);
    saveToLocalStorage('persons', cleanedPersons);
    saveToLocalStorage('activityTypes', cleanedActivityTypes);
    
    const finalStats = {
        activities: uniqueActivities.length,
        persons: cleanedPersons.length,
        activityTypes: cleanedActivityTypes.length
    };
    
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•
    let report = "üîß ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á\n\n";
    report += "üìä ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î:\n";
    report += `   ‚Ä¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${originalStats.activities} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    report += `   ‚Ä¢ ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${originalStats.persons} ‡∏Ñ‡∏ô\n`;
    report += `   ‚Ä¢ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${originalStats.activityTypes} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n\n`;
    
    report += "üìä ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î:\n";
    report += `   ‚Ä¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${finalStats.activities} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    report += `   ‚Ä¢ ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${finalStats.persons} ‡∏Ñ‡∏ô\n`;
    report += `   ‚Ä¢ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${finalStats.activityTypes} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n\n`;
    
    report += "üóëÔ∏è  ‡∏•‡∏ö‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß:\n";
    report += `   ‚Ä¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${originalStats.activities - finalStats.activities} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    report += `   ‚Ä¢ ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${originalStats.persons - finalStats.persons} ‡∏Ñ‡∏ô\n`;
    report += `   ‚Ä¢ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${originalStats.activityTypes - finalStats.activityTypes} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n\n`;
    
    report += "‚úÖ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!";
    
    alert(report);
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    loadUserActivities();
    populatePersonDropdown('personSelect');
    populateActivityTypeDropdowns('activityTypeSelect');
    populatePersonFilter();
    
    showToast('‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î
function findDuplicateActivities(activities) {
    const duplicates = [];
    const seen = new Set();
    
    activities.forEach(activity => {
        const key = `${activity.date}-${activity.startTime}-${activity.endTime}-${activity.person}-${activity.activityName}`;
        
        if (seen.has(key)) {
            duplicates.push(activity);
        } else {
            seen.add(key);
        }
    });
    
    return duplicates;
}

function removeDuplicateActivities(activities) {
    const uniqueActivities = [];
    const seen = new Set();
    
    activities.forEach(activity => {
        const key = `${activity.date}-${activity.startTime}-${activity.endTime}-${activity.person}-${activity.activityName}`;
        
        if (!seen.has(key)) {
            uniqueActivities.push(activity);
            seen.add(key);
        }
    });
    
    return uniqueActivities;
}

function findOrphanedData() {
    const allActivities = getFromLocalStorage('activities') || [];
    const allPersons = getFromLocalStorage('persons') || [];
    const allActivityTypes = getFromLocalStorage('activityTypes') || [];
    
    // ‡∏´‡∏≤‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á
    const orphanedPersons = allPersons.filter(person => 
        !allActivities.some(activity => activity.person === person.name)
    );
    
    // ‡∏´‡∏≤‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á
    const orphanedActivityTypes = allActivityTypes.filter(type => 
        !allActivities.some(activity => activity.activityName === type.name)
    );
    
    return {
        orphanedPersons,
        orphanedActivityTypes
    };
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function updateCurrentPersonDisplay() {
    const personSelect = document.getElementById('personSelect');
    const currentPersonValue = document.getElementById('currentPersonValue');
    
    if (!currentPersonValue) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö element currentPersonValue');
        return;
    }
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const selectedValue = personSelect.value;
    const selectedText = personSelect.options[personSelect.selectedIndex]?.text || '';
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÇ‡∏î‡∏¢‡∏î‡∏π‡∏à‡∏≤‡∏Å display style
    const wrapper = personSelect.closest('.select-wrapper');
    const isAutoSelected = wrapper?.classList.contains('hide-dropdown');
    
    if (selectedValue && selectedValue !== '' && selectedValue !== 'custom') {
        if (isAutoSelected) {
            // ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
            currentPersonValue.textContent = `${selectedText}`;
            currentPersonValue.style.color = '#28a745';
            currentPersonValue.className = 'current-person-value selected';
        } else {
            // ‡∏Å‡∏£‡∏ì‡∏µ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏ï‡∏ô‡πÄ‡∏≠‡∏á
            currentPersonValue.textContent = selectedText;
            currentPersonValue.style.color = '#007bff';
            currentPersonValue.className = 'current-person-value selected';
        }
    } else {
        // ‡∏Å‡∏£‡∏ì‡∏µ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
        currentPersonValue.textContent = '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å';
        currentPersonValue.style.color = '#dc3545';
        currentPersonValue.className = 'current-person-value not-selected';
    }
    
    // ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
    const container = document.querySelector('.current-person-container');
    if (container) {
        container.style.flexDirection = 'row';
        container.style.flexWrap = 'nowrap';
        container.style.whiteSpace = 'nowrap';
    }
    
    console.log(`üë§ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${currentPersonValue.textContent}`);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠ ===
function setupMobilePersonDisplay() {
    const isMobile = window.innerWidth <= 768;
    const container = document.querySelector('.current-person-container');
    
    if (isMobile && container) {
        // ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠: ‡∏ö‡∏±‡∏á‡∏Ñ‡∏±‡∏ö‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÉ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
        container.style.flexDirection = 'row';
        container.style.flexWrap = 'nowrap';
        container.style.whiteSpace = 'nowrap';
        container.style.justifyContent = 'center';
        container.style.alignItems = 'center';
        
        // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÉ‡∏´‡πâ‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡∏Å‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠
        const label = container.querySelector('.current-person-label');
        const value = container.querySelector('.current-person-value');
        
        if (label) label.style.fontSize = 'clamp(0.8rem, 2.5vw, 0.9rem)';
        if (value) value.style.fontSize = 'clamp(0.8rem, 2.5vw, 0.9rem)';
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡∏á‡πÉ‡∏ô dropdown ‡∏Å‡∏£‡∏≠‡∏á ===
function populatePersonFilter() {
    const personFilter = document.getElementById('personFilter');
    if (!personFilter) {
        console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö element personFilter');
        return;
    }
    
    const allPersons = getFromLocalStorage('persons') || [];
    
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ
    const selectedValue = personFilter.value;
    
    // ‡∏•‡πâ‡∏≤‡∏á options ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô option "‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î"
    while (personFilter.options.length > 1) {
        personFilter.remove(1);
    }
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    allPersons.forEach(person => {
        const option = document.createElement('option');
        option.value = person.name;
        option.textContent = person.name;
        personFilter.appendChild(option);
    });
    
    // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ‡πÄ‡∏î‡∏¥‡∏° (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà)
    if (selectedValue && Array.from(personFilter.options).some(opt => opt.value === selectedValue)) {
        personFilter.value = selectedValue;
    }
    
    console.log(`‚úÖ ‡πÇ‡∏´‡∏•‡∏î ${allPersons.length} ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏•‡∏á‡πÉ‡∏ô‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á`);
}

function updatePersonFilterVisibility() {
    const personFilterContainer = document.querySelector('.person-filter-container');
    const allPersons = getFromLocalStorage('persons') || [];
    
    if (personFilterContainer) {
        if (allPersons.length === 1) {
            personFilterContainer.style.display = 'none';
            console.log('‚úÖ ‡∏ã‡πà‡∏≠‡∏ô dropdown ‡∏Å‡∏£‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (‡∏°‡∏µ‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)');
        } else {
            personFilterContainer.style.display = 'block';
        }
    }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
document.addEventListener('DOMContentLoaded', function() {
    updatePersonFilterVisibility();
});

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°/‡∏•‡∏ö/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
function updatePersonFilterAfterChange() {
    populatePersonFilter();
    updateSummaryPersonDisplay();
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡∏™‡∏£‡∏∏‡∏õ ===
function updateSummaryPersonDisplay() {
    const allPersons = getFromLocalStorage('persons') || [];
    const personFilterContainer = document.getElementById('personFilterContainer');
    const autoSelectedPerson = document.getElementById('autoSelectedPerson');
    const selectedPersonName = document.getElementById('selectedPersonName');
    const personFilter = document.getElementById('personFilter');
    
    if (allPersons.length === 1) {
        // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß: ‡∏ã‡πà‡∏≠‡∏ô dropdown ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏ô‡∏ô‡∏±‡πâ‡∏ô‡πÄ‡∏•‡∏¢
        if (personFilterContainer) personFilterContainer.style.display = 'none';
        if (autoSelectedPerson) {
            autoSelectedPerson.style.display = 'block';
            selectedPersonName.textContent = allPersons[0].name;
        }
        console.log(`‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ - ${allPersons[0].name}`);
    } else {
        // ‚úÖ ‡∏Å‡∏£‡∏ì‡∏µ‡∏°‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô: ‡πÅ‡∏™‡∏î‡∏á dropdown ‡∏õ‡∏Å‡∏ï‡∏¥
        if (personFilterContainer) personFilterContainer.style.display = 'block';
        if (autoSelectedPerson) autoSelectedPerson.style.display = 'none';
        populatePersonFilter();
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏£‡∏≠‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ï‡∏≤‡∏°‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function filterActivitiesByPerson(activities, selectedPerson) {
    if (selectedPerson === 'all') {
        return activities;
    }
    return activities.filter(activity => activity.person === selectedPerson);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î ===
function adjustSummaryFontSize() {
    const slider = document.getElementById('summaryFontSizeSlider');
    const valueDisplay = document.getElementById('summaryFontSizeValue');
    const scale = parseFloat(slider.value);
    
    valueDisplay.textContent = `‡∏Ç‡∏ô‡∏≤‡∏î: ${Math.round(scale * 100)}%`;
    
    const summaryResult = document.querySelector('.summaryResult');
    if (summaryResult) {
        summaryResult.style.fontSize = `${scale}rem`;
    }
}

function adjustSummaryLineHeight() {
    const slider = document.getElementById('summaryLineHeightSlider');
    const valueDisplay = document.getElementById('summaryLineHeightValue');
    const scale = parseFloat(slider.value);
    
    valueDisplay.textContent = `‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏Ç‡∏≠‡∏á‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î: ${scale.toFixed(1)}`;
    
    const summaryResult = document.querySelector('.summaryResult');
    if (summaryResult) {
        summaryResult.style.lineHeight = scale;
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Modal ===
function openExportOptionsModal() { 
    document.getElementById('exportOptionsModal').style.display = 'flex'; 
}

function closeExportOptionsModal() { 
    document.getElementById('exportOptionsModal').style.display = 'none'; 
}

function closeSingleDateExportModal() {
    document.getElementById('singleDateExportModal').style.display = 'none';
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤ input
    document.getElementById('exportStartDate').value = '';
    document.getElementById('exportEndDate').value = '';
}

function closeSummaryModal() {
    document.getElementById('summaryModal').style.display = 'none';
}

function closeSummaryOutputModal() {
    document.getElementById('summaryOutputModal').style.display = 'none';
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Responsive Design ===
function initResponsiveDesign() {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
    checkScreenSize();
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏° event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠
    window.addEventListener('resize', checkScreenSize);
    
    // ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠
    adjustTableForMobile();
}

function checkScreenSize() {
    const isMobile = window.innerWidth <= 768;
    
    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏•‡∏≤‡∏™ 'mobile' ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö body ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠
    if (isMobile) {
        document.body.classList.add('mobile');
    } else {
        document.body.classList.remove('mobile');
    }
    
    // ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏°‡∏ô‡∏π
    adjustMenuForMobile(isMobile);
    
    // ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    adjustTableForMobile(isMobile);
}

function adjustTableForMobile(isMobile) {
    const table = document.getElementById('activityTable');
    table.className = 'recent-activities';
    if (!table) return;
    
    const rows = table.querySelectorAll('tbody tr');
    
    // ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠: ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏õ‡∏Å‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÉ‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô
    // ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏≠‡∏µ‡∏Å‡∏ï‡πà‡∏≠‡πÑ‡∏õ
    rows.forEach(row => {
        row.style.display = '';
    });
    
    // ‡∏•‡∏ö‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏ñ‡∏π‡∏Å‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÇ‡∏î‡∏¢‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏Å‡πà‡∏≤
    const cards = document.querySelectorAll('.activity-card');
    cards.forEach(card => card.remove());
    
    console.log('üì± ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠: ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏õ‡∏Å‡∏ï‡∏¥‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô');
}

function adjustMenuForMobile(isMobile) {
    // ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏°‡∏ô‡∏π‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠
    // ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
}

function adjustTimeInputsForMobile() {
    const timeInputsContainer = document.querySelector('.time-inputs-container');
    if (!timeInputsContainer) return;
    
    const isMobile = window.innerWidth <= 768;
    
    if (isMobile) {
        // ‡∏ö‡∏ô‡∏°‡∏∑‡∏≠‡∏ñ‡∏∑‡∏≠: ‡πÉ‡∏ä‡πâ flexbox ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÅ‡∏ñ‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
        timeInputsContainer.style.flexWrap = 'nowrap';
        timeInputsContainer.style.overflowX = 'auto';
        timeInputsContainer.style.justifyContent = 'space-between';
        
        // ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡πà‡∏≥‡∏Ç‡∏≠‡∏á‡∏Å‡∏•‡∏∏‡πà‡∏°‡πÄ‡∏ß‡∏•‡∏≤
        const timeInputGroups = timeInputsContainer.querySelectorAll('.time-input-group');
        timeInputGroups.forEach(group => {
            group.style.minWidth = '100px';
            group.style.flex = '1';
        });
    } else {
        // ‡∏ö‡∏ô‡πÄ‡∏î‡∏™‡∏Å‡πå‡∏ó‡πá‡∏≠‡∏õ: ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏Ñ‡πà‡∏≤
        timeInputsContainer.style.flexWrap = '';
        timeInputsContainer.style.overflowX = '';
        timeInputsContainer.style.justifyContent = '';
        
        const timeInputGroups = timeInputsContainer.querySelectorAll('.time-input-group');
        timeInputGroups.forEach(group => {
            group.style.minWidth = '';
            group.style.flex = '';
        });
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° ===
function toggleActivitiesVisibility() {
    const activitiesSection = document.getElementById('activitiesSection');
    if (activitiesSection.style.display === 'none') {
        activitiesSection.style.display = 'block';
        loadUserActivities();
    } else {
        activitiesSection.style.display = 'none';
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏°‡∏ô‡∏π‡∏´‡∏•‡∏±‡∏Å ===
function closeAllMainSections() {
    const allMainSections = document.querySelectorAll('.main-section-content');
    const allMainHeaders = document.querySelectorAll('.main-section-header');
    
    allMainSections.forEach(section => {
        section.classList.remove('active');
    });
    
    allMainHeaders.forEach(header => {
        header.classList.remove('active');
    });
    
    console.log('üìÇ ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß');
}

function toggleMainSection(sectionId) {
    const section = document.getElementById(sectionId);
    const header = document.querySelector(`[onclick="toggleMainSection('${sectionId}')"]`);
    
    if (!section || !header) {
        console.error(`‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÄ‡∏°‡∏ô‡∏π: ${sectionId}`);
        return;
    }
    
    const isActive = section.classList.contains('active');
    
    // ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πà‡∏≠‡∏ô
    closeAllMainSections();
    
    // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏°‡∏ô‡∏π‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏¥‡∏î‡∏°‡∏±‡∏ô
    if (!isActive) {
        section.classList.add('active');
        if (header) header.classList.add('active');
        console.log(`üìÇ ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π: ${sectionId}`);
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π
        loadSectionData(sectionId);
    }
}

function openSingleSection(sectionId) {
    closeAllMainSections();
    
    const section = document.getElementById(sectionId);
    const header = document.querySelector(`[onclick="toggleMainSection('${sectionId}')"]`);
    
    if (section && header) {
        section.classList.add('active');
        header.classList.add('active');
        console.log(`üìÇ ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏î‡∏µ‡∏¢‡∏ß: ${sectionId}`);
        
        // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π
        loadSectionData(sectionId);
    }
}

function loadSectionData(sectionId) {
    switch(sectionId) {
        case 'add-activity-section':
            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
            populateActivityTypeDropdowns('activityTypeSelect');
            populatePersonDropdown('personSelect');
            setDefaultDateTime();
            break;
            
        case 'view-activities-section':
            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
            loadUserActivities();
            break;
            
        case 'summary-section':
            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡∏∏‡∏õ
            loadSummaryData();
            populatePersonFilter();
            break;
            
        case 'backup-section':
            // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
            console.log('üìä ‡πÇ‡∏´‡∏•‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏≥‡∏£‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•');
            break;
    }
}

function getActiveMenu() {
    const activeSection = document.querySelector('.main-section-content.active');
    return activeSection ? activeSection.id : null;
}

function switchToMenu(sectionId) {
    const currentActive = getActiveMenu();
    if (currentActive === sectionId) {
        console.log(`üìÇ ‡πÄ‡∏°‡∏ô‡∏π ${sectionId} ‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß`);
        return;
    }
    
    openSingleSection(sectionId);
    console.log(`üìÇ ‡∏™‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å ${currentActive} ‡πÑ‡∏õ‡∏¢‡∏±‡∏á ${sectionId}`);
}

function refreshCurrentMenu() {
    const currentMenu = getActiveMenu();
    if (currentMenu) {
        console.log(`üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡πÄ‡∏°‡∏ô‡∏π: ${currentMenu}`);
        
        switch(currentMenu) {
            case 'add-activity-section':
                populateActivityTypeDropdowns('activityTypeSelect');
                populatePersonDropdown('personSelect');
                break;
            case 'view-activities-section':
                loadUserActivities();
                break;
            case 'summary-section':
                loadSummaryData();
                break;
        }
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô PWA ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á ===
function hideInstallPromptPermanently() {
    document.getElementById('install-guide').style.display = 'none';
    localStorage.setItem('hideInstallPrompt', 'true');
}

function checkAndShowInstallPrompt() {
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ã‡πà‡∏≠‡∏ô‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (localStorage.getItem('hideInstallPrompt') === 'true') {
        const installGuide = document.getElementById('install-guide');
        if (installGuide) {
            installGuide.style.display = 'none';
        }
    }
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏£‡∏ß‡∏° 3 ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ===
function cleanAllData() {
    if (!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î?\n\n‡∏Å‡∏≤‡∏£‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏µ‡πâ‡∏à‡∏∞:\n1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n2. ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ã‡πâ‡∏≥‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥\n3. ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á\n\n‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ')) {
        return;
    }
    
    // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    console.log('üîç ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...');
    const healthReport = generateHealthReport();
    alert(healthReport);
    
    // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    console.log('üßπ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥...');
    const autoCleanResult = performAutoClean();
    
    // ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3: ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á
    console.log('üîß ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á...');
    const advancedCleanResult = performAdvancedClean();
    
    // ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î
    showCleanAllSummary(healthReport, autoCleanResult, advancedCleanResult);
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
    loadUserActivities();
    populatePersonDropdown('personSelect');
    populateActivityTypeDropdowns('activityTypeSelect');
    populatePersonFilter();
    
    showToast('‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß', 'success');
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ===
function generateHealthReport() {
    const allActivities = getFromLocalStorage('activities') || [];
    const allPersons = getFromLocalStorage('persons') || [];
    const allActivityTypes = getFromLocalStorage('activityTypes') || [];
    
    let report = "üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•\n\n";
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    report += `üìù ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î: ${allActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
    const incompleteActivities = allActivities.filter(activity => 
        !activity.date || !activity.startTime || !activity.endTime || 
        !activity.person || !activity.activityName
    );
    
    report += `‚ö†Ô∏è  ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: ${incompleteActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    const invalidTimeActivities = allActivities.filter(activity => {
        const duration = calculateDuration(activity.startTime, activity.endTime);
        return duration <= 0 || isNaN(duration);
    });
    
    report += `‚è∞ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ${invalidTimeActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ã‡πâ‡∏≥
    const duplicateActivities = findDuplicateActivities(allActivities);
    report += `üîÑ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ã‡πâ‡∏≥: ${duplicateActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    report += `üë• ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${allPersons.length} ‡∏Ñ‡∏ô\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ
    const unusedPersons = allPersons.filter(person => 
        !allActivities.some(activity => activity.person === person.name)
    );
    
    report += `üö´ ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ: ${unusedPersons.length} ‡∏Ñ‡∏ô\n\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    report += `üìã ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${allActivityTypes.length} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ
    const unusedActivityTypes = allActivityTypes.filter(type => 
        !allActivities.some(activity => activity.activityName === type.name)
    );
    
    report += `üö´ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ: ${unusedActivityTypes.length} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n\n`;
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢
    const corruptedActivities = allActivities.filter(activity => 
        !activity.id || typeof activity.id !== 'string'
    );
    
    report += `‚ùå ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏™‡∏µ‡∏¢‡∏´‡∏≤‡∏¢: ${corruptedActivities.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    
    return report;
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ===
function performAutoClean() {
    const allActivities = getFromLocalStorage('activities') || [];
    const originalCount = allActivities.length;
    
    if (originalCount === 0) {
        return { removed: 0, originalCount: 0 };
    }
    
    // ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ã‡πâ‡∏≥
    const uniqueActivities = removeDuplicateActivities(allActivities);
    
    // ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
    const cleanedActivities = uniqueActivities.filter(activity => 
        activity.date && activity.startTime && activity.endTime && 
        activity.person && activity.activityName &&
        calculateDuration(activity.startTime, activity.endTime) > 0
    );
    
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏•‡πâ‡∏ß
    saveToLocalStorage('activities', cleanedActivities);
    
    const removedCount = originalCount - cleanedActivities.length;
    
    return {
        removed: removedCount,
        originalCount: originalCount,
        cleanedCount: cleanedActivities.length
    };
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏π‡∏á ===
function performAdvancedClean() {
    const allActivities = getFromLocalStorage('activities') || [];
    const allPersons = getFromLocalStorage('persons') || [];
    const allActivityTypes = getFromLocalStorage('activityTypes') || [];
    
    const originalStats = {
        activities: allActivities.length,
        persons: allPersons.length,
        activityTypes: allActivityTypes.length
    };
    
    // 1. ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
    const cleanedActivities = allActivities.filter(activity => 
        activity.date && activity.startTime && activity.endTime && 
        activity.person && activity.activityName &&
        activity.id && typeof activity.id === 'string' &&
        calculateDuration(activity.startTime, activity.endTime) > 0
    );
    
    // 2. ‡∏•‡∏ö‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ã‡πâ‡∏≥
    const uniqueActivities = removeDuplicateActivities(cleanedActivities);
    
    // 3. ‡∏•‡∏ö‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ
    const usedPersons = new Set(uniqueActivities.map(activity => activity.person));
    const cleanedPersons = allPersons.filter(person => usedPersons.has(person.name));
    
    // 4. ‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ
    const usedActivityTypes = new Set(uniqueActivities.map(activity => activity.activityName));
    const cleanedActivityTypes = allActivityTypes.filter(type => usedActivityTypes.has(type.name));
    
    // 5. ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÅ‡∏•‡πâ‡∏ß
    saveToLocalStorage('activities', uniqueActivities);
    saveToLocalStorage('persons', cleanedPersons);
    saveToLocalStorage('activityTypes', cleanedActivityTypes);
    
    const finalStats = {
        activities: uniqueActivities.length,
        persons: cleanedPersons.length,
        activityTypes: cleanedActivityTypes.length
    };
    
    return {
        originalStats: originalStats,
        finalStats: finalStats
    };
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ===
function showCleanAllSummary(healthReport, autoCleanResult, advancedCleanResult) {
    let summary = "üßπ ‡∏™‡∏£‡∏∏‡∏õ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î\n\n";
    
    summary += "üìä ‡∏Å‡πà‡∏≠‡∏ô‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î:\n";
    summary += `   ‚Ä¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${advancedCleanResult.originalStats.activities} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    summary += `   ‚Ä¢ ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${advancedCleanResult.originalStats.persons} ‡∏Ñ‡∏ô\n`;
    summary += `   ‚Ä¢ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${advancedCleanResult.originalStats.activityTypes} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n\n`;
    
    summary += "üìä ‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î:\n";
    summary += `   ‚Ä¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${advancedCleanResult.finalStats.activities} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    summary += `   ‚Ä¢ ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${advancedCleanResult.finalStats.persons} ‡∏Ñ‡∏ô\n`;
    summary += `   ‚Ä¢ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${advancedCleanResult.finalStats.activityTypes} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n\n`;
    
    summary += "üóëÔ∏è  ‡∏•‡∏ö‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß:\n";
    summary += `   ‚Ä¢ ‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${advancedCleanResult.originalStats.activities - advancedCleanResult.finalStats.activities} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n`;
    summary += `   ‚Ä¢ ‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${advancedCleanResult.originalStats.persons - advancedCleanResult.finalStats.persons} ‡∏Ñ‡∏ô\n`;
    summary += `   ‚Ä¢ ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°: ${advancedCleanResult.originalStats.activityTypes - advancedCleanResult.finalStats.activityTypes} ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó\n\n`;
    
    summary += "‚úÖ ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß!";
    
    alert(summary);
}

// === ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏° (‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà) ===
function refreshPersonFilter() {
    console.log('üîÑ ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°');
    populatePersonFilter();
    updateSummaryPersonDisplay();
}

// === ‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å ===
document.addEventListener('DOMContentLoaded', function() {
    console.log('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô...');
    
    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ã‡πà‡∏≠‡∏ô‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    checkAndShowInstallPrompt();
    
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°
    const today = new Date().toISOString().split('T')[0];
    document.getElementById('activity-date').value = today;
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    initializeDefaultData();
    
    // ‡πÇ‡∏´‡∏•‡∏î‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    loadUserActivities();
    populatePersonFilter();
    
// ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏£‡∏∏‡∏õ (‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡πÑ‡∏ó‡∏¢)
const thaiToday = getThaiDateString();
document.getElementById('summary-date').value = thaiToday;
document.getElementById('summary-start-date').value = thaiToday;
document.getElementById('summary-end-date').value = thaiToday;
    
    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î event listeners
    document.getElementById('activity-form').addEventListener('submit', handleActivityFormSubmit);
    document.getElementById('update-activity-button').addEventListener('click', handleActivityFormSubmit);
    document.getElementById('cancel-edit-activity-button').addEventListener('click', cancelEditActivity);
    
    // Event listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    document.getElementById('addPersonBtn').addEventListener('click', addPerson);
    document.getElementById('editPersonBtn').addEventListener('click', editPerson);
    document.getElementById('deletePersonBtn').addEventListener('click', deletePerson);
    document.getElementById('resetPersonBtn').addEventListener('click', resetPerson);
    document.getElementById('savePersonBtn').addEventListener('click', savePerson);
    document.getElementById('cancelPersonBtn').addEventListener('click', closePersonModal);
    
    // Event listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    document.getElementById('addActivityTypeBtn').addEventListener('click', addActivityType);
    document.getElementById('editActivityTypeBtn').addEventListener('click', editActivityType);
    document.getElementById('deleteActivityTypeBtn').addEventListener('click', deleteActivityType);
    document.getElementById('resetActivityTypeBtn').addEventListener('click', resetActivityType);
    document.getElementById('saveActivityTypeBtn').addEventListener('click', saveActivityType);
    document.getElementById('cancelActivityTypeBtn').addEventListener('click', closeActivityTypeModal);
    
    // Event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    const saveImageBtn = document.getElementById('saveSummaryAsImageBtn');
    if (saveImageBtn) {
        saveImageBtn.addEventListener('click', saveSummaryAsImage);
    }
    
    // Event listener ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ú‡∏π‡πâ‡∏ó‡∏≥‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°
    document.getElementById('personSelect').addEventListener('change', updateCurrentPersonDisplay);
    
    // Event listeners ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
    document.getElementById('toggle-password').addEventListener('click', function() {
        togglePasswordVisibility('backup-password', 'toggle-password');
    });
    
    document.getElementById('toggle-password-confirm').addEventListener('click', function() {
        togglePasswordVisibility('backup-password-confirm', 'toggle-password-confirm');
    });
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
    updateCurrentPersonDisplay();
    
    // ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏°‡∏ô‡∏π‡πÅ‡∏£‡∏Å‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
    setTimeout(() => {
        toggleMainSection('add-activity-section');
    }, 500);
    
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô responsive
    initResponsiveDesign();
    
    console.log('‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô');
});